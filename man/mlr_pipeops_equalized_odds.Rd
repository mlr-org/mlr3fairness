% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/PipeOpEOd.R
\name{mlr_pipeops_equalized_odds}
\alias{mlr_pipeops_equalized_odds}
\alias{PipeOpEOd}
\title{Equalized Odds Debiasing}
\format{
\code{\link{R6Class}} object inheriting from \code{\link{PipeOpTaskPreproc}}/\code{\link{PipeOp}}.
}
\description{
Fairness post-processing method to achieve equalized odds fairness.
Works by randomly flipping a subset of predictions with pre-computed
probabilities in order to satisfy equalized odds constraints.\cr
NOTE: Carefully assess the correct privileged group.
}
\details{
For additional details, see: \cr
\itemize{
\item M. Hardt, E. Price, and N. Srebro, "Equality of Opportunity in
Supervised Learning," Conference on Neural Information Processing
Systems, 2016.
\item G. Pleiss, M. Raghavan, F. Wu, J. Kleinberg, and
K. Q. Weinberger, "On Fairness and Calibration," Conference on Neural
Information Processing Systems, 2017.
}
}
\section{Construction}{
\preformatted{PipeOpEOd*$new(id = "eod", param_vals = list())
}
\itemize{
\item \code{id} :: \code{character(1)}
\item \code{param_vals} :: \code{list}
}
}

\section{Input and Output Channels}{

Input and output channels are inherited from \code{\link{PipeOpTaskPreproc}}. Instead of a \code{\link[mlr3:Task]{Task}}, a
\code{\link[mlr3:TaskClassif]{TaskClassif}} is used as input and output during training and prediction.

The output during training is the input \code{\link[mlr3:Task]{Task}}. The output during prediction is
a \code{\link[mlr3:PredictionClassif]{PredictionClassif}} with partially flipped predictions.
}

\section{State}{

The \verb{$state} is a named \code{list} with the \verb{$state} elements inherited from \code{\link{PipeOpTaskPreproc}}.
}

\section{Parameters}{

\itemize{
\item \code{alpha} :: \code{numeric} A number between 0 (no debiasing) and 1 (full debiasing).
Controls the debiasing strength by multiplying the flipping probabilities with alpha.
\item \code{privileged} :: \code{character} The priviledged group.
}
}

\section{Fields}{

Only fields inherited from \code{\link{PipeOpTaskPreproc}}/\code{\link{PipeOp}}.
}

\section{Methods}{

Methods inherited from \code{\link{PipeOpTaskPreproc}}/\code{\link{PipeOp}}.
}

\examples{
library(mlr3pipelines)
library(mlr3fairness)
library(mlr3)

eod = po("EOd")
learner_po = po("learner_cv", learner = lrn("classif.rpart", cp = .0001))

task = tsk("adult_train")
graph = learner_po \%>>\% eod
glrn = GraphLearner$new(graph)
glrn$train(task)
# On a Task
glrn$predict(task)
# On newdata
glrn$predict_newdata(task$data(cols = task$feature_names))
}
\seealso{
https://mlr3book.mlr-org.com/list-pipeops.html

Other PipeOps: 
\code{\link{mlr_pipeops_reweighing}}
}
\concept{PipeOps}
\section{Super class}{
\code{\link[mlr3pipelines:PipeOp]{mlr3pipelines::PipeOp}} -> \code{PipeOpEOd}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-new}{\code{PipeOpEOd$new()}}
\item \href{#method-clone}{\code{PipeOpEOd$clone()}}
}
}
\if{html}{
\out{<details open ><summary>Inherited methods</summary>}
\itemize{
\item \out{<span class="pkg-link" data-pkg="mlr3pipelines" data-topic="PipeOp" data-id="predict">}\href{../../mlr3pipelines/html/PipeOp.html#method-predict}{\code{mlr3pipelines::PipeOp$predict()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="mlr3pipelines" data-topic="PipeOp" data-id="print">}\href{../../mlr3pipelines/html/PipeOp.html#method-print}{\code{mlr3pipelines::PipeOp$print()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="mlr3pipelines" data-topic="PipeOp" data-id="train">}\href{../../mlr3pipelines/html/PipeOp.html#method-train}{\code{mlr3pipelines::PipeOp$train()}}\out{</span>}
}
\out{</details>}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-new"></a>}}
\if{latex}{\out{\hypertarget{method-new}{}}}
\subsection{Method \code{new()}}{
Creates a new instance of this [R6][R6::R6Class][\code{PipeOp}] R6 class.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{PipeOpEOd$new(id = "EOd", param_vals = list())}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{id}}{\code{character} \cr
The PipeOps identifier in the PipeOps library.}

\item{\code{param_vals}}{\code{list} \cr
The parameter values to be set. See \code{Parameters}.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-clone"></a>}}
\if{latex}{\out{\hypertarget{method-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{PipeOpEOd$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
