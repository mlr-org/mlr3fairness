[{"path":"https://mlr3fairness.mlr-org.com/articles/debiasing-vignette.html","id":"introduction-fairness-pipeline-operators","dir":"Articles","previous_headings":"","what":"Introduction: Fairness Pipeline Operators","title":"Debiasing Methods","text":"Given detected form bias bias auditing, often interested obtaining fair(er) models. several ways achieve , collecting additional data finding fixing errors data, given biases labelling process one option debias models using either preprocessing, postprocessing inprocessing methods. mlr3fairness provides operators PipeOps mlr3pipelines. familiar mlr3pipelines, mlr3 book showcase debiasing using adult_train task:","code":"library(mlr3fairness) #> Loading required package: mlr3 library(mlr3pipelines) library(mlr3)  task = tsk(\"adult_train\")"},{"path":"https://mlr3fairness.mlr-org.com/articles/debiasing-vignette.html","id":"reweighing-algorithms","dir":"Articles","previous_headings":"","what":"Reweighing algorithms","title":"Debiasing Methods","text":"mlr3fairness implements 2 reweighing-based algorithms: reweighing_wts reweighing_os. reweighing_wts adds observation weights Task can counteract imbalances conditional probabilities \\(P(Y | pta)\\). fist instantiate PipeOp: directly add weights: Often directly combine PipeOp Learner automate preprocessing (see learner_rw). instantiate small benchmark can now compute metrics benchmark see reweighing actually improved fairness, measured via True Positive Rate (TPR) classification accuracy (ACC):  model became way fairer wrt. TPR minimally worse wrt. accuracy!","code":"p1 = po(\"reweighing_wts\") t1 = p1$train(list(task))[[1]] set.seed(4321) learner = lrn(\"classif.rpart\", cp = 0.005) learner_rw = as_learner(po(\"reweighing_wts\") %>>% learner) grd = benchmark_grid(list(task), list(learner, learner_rw), rsmp(\"cv\", folds=3)) bmr = benchmark(grd) bmr$aggregate(msrs(c(\"fairness.tpr\", \"fairness.acc\"))) #>    nr      resample_result     task_id                   learner_id #> 1:  1 <ResampleResult[21]> adult_train                classif.rpart #> 2:  2 <ResampleResult[21]> adult_train reweighing_wts.classif.rpart #>    resampling_id iters fairness.tpr fairness.acc #> 1:            cv     3   0.07494903    0.1162688 #> 2:            cv     3   0.01151982    0.1054431 fairness_accuracy_tradeoff(bmr, msr(\"fairness.tpr\"))"},{"path":"https://mlr3fairness.mlr-org.com/articles/measures-vignette.html","id":"fairnessmeasures","dir":"Articles","previous_headings":"","what":"FairnessMeasures","title":"Fairness Metrics","text":"Fairness measures (metrics) allow us assess audit possible biases trained model. several types metrics widely used order assess model’s fairness. can coarsely classified three groups: Statistical Group Fairness Metrics: Given set predictions model, assess differences one multiple metrics across groups. Individual Fairness: Basically requires similar people treated similar independent protected attribute. philosophical concept concrete implementations fairness notion immediately clear. Causal Fairness Notions: important realization context Fairness , whether process fair often subject underlying causal directed acyclic graph (DAG). Knowledge DAG allows causally assessing reasons (un-)fairness. Since DAG’s often hard construct given dataset, currently provide causal fairness metrics.","code":""},{"path":"https://mlr3fairness.mlr-org.com/articles/measures-vignette.html","id":"core-idea-statistical-group-fairness","dir":"Articles","previous_headings":"FairnessMeasures","what":"Core Idea: Statistical Group Fairness","title":"Fairness Metrics","text":"simple way assess fairness model find definition fairness relevant problem hand. might example define model fair chance accepted job given qualified independent protected attribute e.g. gender. can e.g. measured using true positive rate(TPR): mlr3 metric called \"classif.tpr\". case measure discrepancies groups computing differences (-) also compute quotients. practice, often compute absolute differences. \\[   \\Delta_{TPR} = TPR_{Group 1} - TPR_{Group 2} \\] use metrics like one defined throughout remainder vignette. predefined measures readily available mlr3fairness, also showcase custom measures can constructed . general, fairness measures fairness. prefix followed metric compared across groups. thus e.g. call difference accuracies across groups fairness.acc. full list can found .","code":""},{"path":"https://mlr3fairness.mlr-org.com/articles/measures-vignette.html","id":"assessing-for-bias-a-first-look","dir":"Articles","previous_headings":"FairnessMeasures","what":"Assessing for Bias: A first look","title":"Fairness Metrics","text":"vignette assumes familiar basics mlr3 ’s core objects. mlr3 book can great ressource case want learn mlr3’s internals. first start training model want conduct audit. example, use adult_train dataset. Keep mind datasets mlr3fairness package already set protected attribute via col_role “pta”, “sex” column. speed things , use first 1000 rows. model random forest model fitted dataset: can now predict new dataset use predictions assess bias: Using $score method measure can e.g. compute absolute differences true positive rates. exact measure choose often data-set situation dependent. Aequitas Fairness Tree can great ressource get started. can furthermore simply look per-group measures:","code":"library(mlr3fairness) library(mlr3learners)  t = tsk(\"adult_train\")$filter(1:1000) t$col_roles$pta #> [1] \"sex\" l = lrn(\"classif.ranger\") l$train(t) test = tsk(\"adult_test\") prd = l$predict(test) prd$score(msr(\"fairness.tpr\"), task = test) #> fairness.tpr  #>   0.08239623 meas = groupwise_metrics(msr(\"classif.tpr\"), test) prd$score(meas, task = test) #>   subgroup.tpr_Male subgroup.tpr_Female  #>           0.8945373           0.9769335"},{"path":"https://mlr3fairness.mlr-org.com/articles/measures-vignette.html","id":"fairness-measures---an-in-depth-look","dir":"Articles","previous_headings":"FairnessMeasures","what":"Fairness Measures - An in-depth look","title":"Fairness Metrics","text":", used msr(\"fairness.tpr\") assess differences false positive rates across groups. happens internally? msr() function used obtain Measure dictionary pre-defined Measures. can use msr() without arguments order print list available measures. following example, build Measure computes differences False Positive Rates making use \"classif.fpr\" measure readily implemented mlr3. core Measure mlr3fairness MeasureFairness. can used construct arbitrary measures compute difference specific metric across groups. can therefore build new metric follows: measure following steps: - Compute metric supplied base_measure group defined \"pta\" column. - Compute operation (abs(x[1] - x[2])) return result. cases, might also want replace operation different operation, e.g. x[1] / x[2] order compute different perspective. mlr3fairness comes two built-functions can used compute fairness metrics also across protected attributes two classes. groupdiff_absdiff: maximum absolute difference classes (default metrics) groupdiff_tau: minimum quotient classes Note: Depending operation need set different minimize flag measure, subsequent operations based measure automatically know measure minimized maximized e.g. tuning. can also use operations construct measure using msr(), since MeasureFairness (key: msr(\"fairness\")) can constructed dictionary additional arguments. allows us construct pretty flexible metrics e.g. regression settings:","code":"# Binary Class false positive rates msr(\"classif.fpr\") #> <MeasureBinarySimple:classif.fpr>: False Positive Rate #> * Packages: mlr3, mlr3measures #> * Range: [0, 1] #> * Minimize: TRUE #> * Average: macro #> * Parameters: list() #> * Properties: - #> * Predict type: response m1 = MeasureFairness$new(base_measure = msr(\"classif.fpr\"), operation = function(x) {abs(x[1] - x[2])}) m1 #> <MeasureFairness:fairness.fpr> #> * Packages: mlr3, mlr3fairness #> * Range: [-Inf, Inf] #> * Minimize: TRUE #> * Average: macro #> * Parameters: list() #> * Properties: requires_task #> * Predict type: response m2 = msr(\"fairness\", operation = groupdiff_absdiff, base_measure = msr(\"classif.tpr\")) m2 = msr(\"fairness\", operation = groupdiff_absdiff, base_measure = msr(\"regr.mse\"))"},{"path":"https://mlr3fairness.mlr-org.com/articles/measures-vignette.html","id":"non-binary-protected-groups","dir":"Articles","previous_headings":"FairnessMeasures > Fairness Measures - An in-depth look","what":"Non-binary protected groups","title":"Fairness Metrics","text":"fairness measures widely defined used binary protected attributes, can easily extend fairness measures work non-binary valued protected attributes. order , supply operation reduces desired metric measured subgroup single value. Two examples operations groupdiff_absdiff groupdiff_tau custom functions can also applied. Note, mlr3 Measures designed scalar output operation therefore always result single scalar value.","code":""},{"path":"https://mlr3fairness.mlr-org.com/articles/measures-vignette.html","id":"composite-fairness-measures","dir":"Articles","previous_headings":"FairnessMeasures","what":"Composite Fairness Measures","title":"Fairness Metrics","text":"fairness measures also require combination multiple Fairness Metrics. following example show compute mean two fairness metrics, false negative true negative rates create new Measure computes mean (see aggfun) metrics:","code":"ms = list(msr(\"fairness.fnr\"), msr(\"fairness.tnr\")) ms #> [[1]] #> <MeasureFairness:fairness.fnr> #> * Packages: mlr3, mlr3fairness #> * Range: [0, 1] #> * Minimize: TRUE #> * Average: macro #> * Parameters: list() #> * Properties: requires_task #> * Predict type: response #>  #> [[2]] #> <MeasureFairness:fairness.tnr> #> * Packages: mlr3, mlr3fairness #> * Range: [0, 1] #> * Minimize: TRUE #> * Average: macro #> * Parameters: list() #> * Properties: requires_task #> * Predict type: response  m = MeasureFairnessComposite$new(measures = ms, aggfun = mean)"},{"path":"https://mlr3fairness.mlr-org.com/articles/measures-vignette.html","id":"how-to-compare-the-fairness-performance-between-different-learners-using-benchmarks","dir":"Articles","previous_headings":"FairnessMeasures","what":"How to compare the fairness performance between different learners using Benchmarks","title":"Fairness Metrics","text":"example, create BenchmarkInstance. using aggregate() function access fairness measures easily. following example demonstrates process evaluate fairness metrics Benchmark Results:","code":"design = benchmark_grid(   tasks = tsks(\"compas\"),   learners = lrns(c(\"classif.ranger\", \"classif.rpart\"),     predict_type = \"prob\", predict_sets = c(\"train\", \"predict\")),   resamplings = rsmps(\"cv\", folds = 3) )  bmr = benchmark(design)  # Operations have been set to `groupwise_quotient()` measures = list( msr(\"fairness.tpr\"), msr(\"fairness.npv\"), msr(\"fairness.acc\"), msr(\"classif.acc\") )  tab = bmr$aggregate(measures) #> Warning: Measure 'fairness.tpr' needs predict sets 'test', but learner #> 'classif.ranger' only predicted on sets 'train', 'predict' #> Warning: Measure 'fairness.npv' needs predict sets 'test', but learner #> 'classif.ranger' only predicted on sets 'train', 'predict' #> Warning: Measure 'fairness.acc' needs predict sets 'test', but learner #> 'classif.ranger' only predicted on sets 'train', 'predict' #> Warning: Measure 'classif.acc' needs predict sets 'test', but learner #> 'classif.ranger' only predicted on sets 'train', 'predict' #> Warning: Measure 'fairness.tpr' needs predict sets 'test', but learner #> 'classif.rpart' only predicted on sets 'train', 'predict' #> Warning: Measure 'fairness.npv' needs predict sets 'test', but learner #> 'classif.rpart' only predicted on sets 'train', 'predict' #> Warning: Measure 'fairness.acc' needs predict sets 'test', but learner #> 'classif.rpart' only predicted on sets 'train', 'predict' #> Warning: Measure 'classif.acc' needs predict sets 'test', but learner #> 'classif.rpart' only predicted on sets 'train', 'predict' tab #>    nr      resample_result task_id     learner_id resampling_id iters #> 1:  1 <ResampleResult[21]>  compas classif.ranger            cv     3 #> 2:  2 <ResampleResult[21]>  compas  classif.rpart            cv     3 #>    fairness.tpr fairness.npv fairness.acc classif.acc #> 1:          NaN          NaN          NaN         NaN #> 2:          NaN          NaN          NaN         NaN"},{"path":"https://mlr3fairness.mlr-org.com/articles/measures-vignette.html","id":"metrics-aggregation---groupdiff_","dir":"Articles","previous_headings":"FairnessMeasures","what":"Metrics aggregation - groupdiff_*","title":"Fairness Metrics","text":"MeasureFairness, mlr3 computes base_measure group specified pta column. now want return measures, need aggregate single metric - e.g. using one groupdiff_* functions available mlr3. See ?groupdiff_tau list. Note, operation also accepts custom aggregation function, see example . can also report metrics, e.g. error specific group:","code":"msr(\"fairness.acc\", operation = groupdiff_diff) #> <MeasureFairness:fairness.acc> #> * Packages: mlr3, mlr3fairness #> * Range: [0, 1] #> * Minimize: TRUE #> * Average: macro #> * Parameters: list() #> * Properties: requires_task #> * Predict type: response t = tsk(\"adult_train\")$filter(1:1000) mm = msr(\"fairness.acc\", operation = function(x) {x[\"Female\"]}) l = lrn(\"classif.rpart\") prds = l$train(t)$predict(t) prds$score(mm, t) #> fairness.acc  #>    0.9404389"},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":"https://mlr3fairness.mlr-org.com/articles/visualization-vignette.html","id":"why-we-need-fairness-visualizations","dir":"Articles","previous_headings":"","what":"Why we need fairness visualizations:","title":"Fairness Visualizations","text":"fairness visualizations allow first investigations possible fairness problems dataset. vignette showcase pre-built fairness visualization functions. methods showcased can used together objects type BenchmarkResult, ResampleResult Prediction.","code":""},{"path":"https://mlr3fairness.mlr-org.com/articles/visualization-vignette.html","id":"the-scenario","dir":"Articles","previous_headings":"","what":"The scenario","title":"Fairness Visualizations","text":"example, use adult_train dataset. Keep mind datasets mlr3fairness package already set protected attribute via col_role “pta”, “sex” column. choose random forest well decision tree model order showcase differences performances. Note, important evaluate predictions held-data order obtain unbiased estimates fairness performance metrics. inspecting confusion matrix, can get first insights. furthermore design small experiment allowing us compare random forest (ranger) decision tree (rpart). result, bmr BenchmarkResult contains trained models cross-validation split.","code":"t = tsk(\"adult_train\") t$col_roles$pta #> [1] \"sex\" task = tsk(\"adult_train\")$filter(1:5000) learner = lrn(\"classif.ranger\", predict_type = \"prob\") learner$train(task) predictions = learner$predict(tsk(\"adult_test\")$filter(1:5000)) predictions$confusion #>         truth #> response <=50K >50K #>    <=50K  3500  489 #>    >50K    260  751 design = benchmark_grid(   tasks = tsk(\"adult_train\")$filter(1:5000),   learners = lrns(c(\"classif.ranger\", \"classif.rpart\"),                   predict_type = \"prob\"),   resamplings = rsmps(\"cv\", folds = 3) )  bmr = benchmark(design)"},{"path":"https://mlr3fairness.mlr-org.com/articles/visualization-vignette.html","id":"fairness-prediction-density-plot","dir":"Articles","previous_headings":"","what":"Fairness Prediction Density Plot","title":"Fairness Visualizations","text":"inspecting prediction density plot can see predicted probability given class split protected attribute, case \"sex\". Large differences densities might hint strong differences target groups, either directly data consequence modeling process. Note, plotting densities Prediction requires Task since information protected attributes contained Prediction. can either plot density Prediction  use BenchmarkResult / ResampleResult:","code":"fairness_prediction_density(predictions, task) fairness_prediction_density(bmr)"},{"path":"https://mlr3fairness.mlr-org.com/articles/visualization-vignette.html","id":"fairness-accuracy-tradeoff-plot","dir":"Articles","previous_headings":"","what":"Fairness Accuracy Tradeoff Plot","title":"Fairness Visualizations","text":"practice, often interested trade-fairness metrics measure utility accuracy. showcase individual scores obtained cross-validation fold well aggregate (mean) order additionally provide indication variance performance estimates.","code":"fairness_accuracy_tradeoff(bmr, msr(\"fairness.fpr\"))"},{"path":"https://mlr3fairness.mlr-org.com/articles/visualization-vignette.html","id":"fairness-comparison-plot","dir":"Articles","previous_headings":"","what":"Fairness Comparison Plot","title":"Fairness Visualizations","text":"additional comparison can obtained using compare_metrics. allows comparing Learners respect multiple metrics. , can use Prediction:  use BenchmarkResult / ResampleResult:","code":"compare_metrics(predictions, msrs(c(\"fairness.fpr\", \"fairness.tpr\")), task) compare_metrics(bmr, msrs(c(\"classif.ce\", \"fairness.fpr\", \"fairness.tpr\")))"},{"path":"https://mlr3fairness.mlr-org.com/articles/visualization-vignette.html","id":"custom-visualizations","dir":"Articles","previous_headings":"","what":"Custom visualizations","title":"Fairness Visualizations","text":"required metrics create custom visualizations can also easily computed using $score() method.","code":"bmr$score(msr(\"fairness.tpr\")) #>                                   uhash nr              task     task_id #> 1: 0edccaa2-946a-4cef-a505-0d5eda73d24f  1 <TaskClassif[50]> adult_train #> 2: 0edccaa2-946a-4cef-a505-0d5eda73d24f  1 <TaskClassif[50]> adult_train #> 3: 0edccaa2-946a-4cef-a505-0d5eda73d24f  1 <TaskClassif[50]> adult_train #> 4: fad4582b-c65a-4e14-b39e-f884d484a89a  2 <TaskClassif[50]> adult_train #> 5: fad4582b-c65a-4e14-b39e-f884d484a89a  2 <TaskClassif[50]> adult_train #> 6: fad4582b-c65a-4e14-b39e-f884d484a89a  2 <TaskClassif[50]> adult_train #>                       learner     learner_id         resampling resampling_id #> 1: <LearnerClassifRanger[38]> classif.ranger <ResamplingCV[20]>            cv #> 2: <LearnerClassifRanger[38]> classif.ranger <ResamplingCV[20]>            cv #> 3: <LearnerClassifRanger[38]> classif.ranger <ResamplingCV[20]>            cv #> 4:  <LearnerClassifRpart[38]>  classif.rpart <ResamplingCV[20]>            cv #> 5:  <LearnerClassifRpart[38]>  classif.rpart <ResamplingCV[20]>            cv #> 6:  <LearnerClassifRpart[38]>  classif.rpart <ResamplingCV[20]>            cv #>    iteration              prediction fairness.tpr #> 1:         1 <PredictionClassif[20]>   0.10672097 #> 2:         2 <PredictionClassif[20]>   0.05280547 #> 3:         3 <PredictionClassif[20]>   0.06701138 #> 4:         1 <PredictionClassif[20]>   0.10969300 #> 5:         2 <PredictionClassif[20]>   0.06053154 #> 6:         3 <PredictionClassif[20]>   0.14597622"},{"path":"https://mlr3fairness.mlr-org.com/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Florian Pfisterer. Maintainer, author. Wei Siyi. Author. Michel Lang. Author.","code":""},{"path":"https://mlr3fairness.mlr-org.com/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Pfisterer F, Siyi W, Lang M (2022). mlr3fairness: Fairness Auditing Debiasing 'mlr3'. https://mlr3fairness.mlr-org.com, https://github.com/mlr-org/mlr3fairness.","code":"@Manual{,   title = {mlr3fairness: Fairness Auditing and Debiasing for 'mlr3'},   author = {Florian Pfisterer and Wei Siyi and Michel Lang},   year = {2022},   note = {https://mlr3fairness.mlr-org.com, https://github.com/mlr-org/mlr3fairness}, }"},{"path":"https://mlr3fairness.mlr-org.com/index.html","id":"mlr3fairness-","dir":"","previous_headings":"","what":"Fairness Auditing and Debiasing for mlr3","title":"Fairness Auditing and Debiasing for mlr3","text":"Machine Learning Fairness Extension mlr3.","code":""},{"path":"https://mlr3fairness.mlr-org.com/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Fairness Auditing and Debiasing for mlr3","text":"Install development version github:","code":"remotes::install_github(\"mlr-org/mlr3fairness\")"},{"path":"https://mlr3fairness.mlr-org.com/index.html","id":"why-should-i-care-about-fairness-in-machine-learning","dir":"","previous_headings":"","what":"Why should I care about fairness in machine learning?","title":"Fairness Auditing and Debiasing for mlr3","text":"Machine Learning model predictions can skewed range factors thus might considered unfair towards certain groups individuals. example COMPAS algorithm, popular commercial algorithm used judges parole officers scoring criminal defendant’s likelihood reoffending (recidivism). Studies shown, algorithm might biased favor white defendants. Biases can occur large variety situations algorithms automate support human decision making e.g. credit checks, automatic HR tools along variety domains. goal mlr3fairness allow auditing mlr3 learners, visualization subsequently trying improve fairness using debiasing strategies. ⚠️ Note Bias auditing debiasing solely based observational data can guarantee fairness decision making system. Several biases, example comming data can detected using approaches implemented mlr3fairness. goal software thus allow better understanding first hints possible fairness problems studied model.","code":""},{"path":"https://mlr3fairness.mlr-org.com/index.html","id":"feature-overview","dir":"","previous_headings":"","what":"Feature Overview","title":"Fairness Auditing and Debiasing for mlr3","text":"Fairness Measures: Audit algorithmms fairness using variety fairness criteria. also allows designing custom criteria. Fairness Visualizations: Diagnose fairness problems visualizations. Debiasing Methods: Correct fairness problems three lines code. Fairness Report: Obtain report regarding algorithm’s fairness. (development) Information Debiasing Fairness Metrics Visualizations Reports","code":""},{"path":"https://mlr3fairness.mlr-org.com/index.html","id":"protected-attribute","dir":"","previous_headings":"Feature Overview","what":"Protected Attribute","title":"Fairness Auditing and Debiasing for mlr3","text":"mlr3fairness requires information protected attribute wrt. want assess fairness. can set via col_role “pta” (protected attribute). case non-categorical complex protected attribute required, can manually computed added task. mlr3fairness require specific types pta, compute one metric every unique value pta column.","code":"task$col_roles$pta = \"variable_name\""},{"path":"https://mlr3fairness.mlr-org.com/index.html","id":"fairness-metrics","dir":"","previous_headings":"Feature Overview","what":"Fairness Metrics","title":"Fairness Auditing and Debiasing for mlr3","text":"mlr3fairness offers variety fairness metrics. Metrics prefixed fairness. can found msr() dictionary. fairness metrics based difference two protected groups (e.g. male female) given metric (e.g. false positive rate: fpr). See vignette -depth introduction fairness metrics choose . Additional custom fairness metrics can easily constructed, vignette contains details. fairness_tensor() function can used Prediction order print group-wise confusion matrices protected attribute group. can furthermore measure fairrness group separately using MeasureSubgroup groupwise_metrics.","code":"library(mlr3) library(mlr3fairness)"},{"path":"https://mlr3fairness.mlr-org.com/index.html","id":"fairness-visualizations","dir":"","previous_headings":"Feature Overview","what":"Fairness Visualizations","title":"Fairness Auditing and Debiasing for mlr3","text":"Visualizations can used either Prediction, ResampleResult BenchmarkResult. information regarding objects, refer mlr3 book. fairness_accuracy_tradeoff: Plot available trade-offs fairness model performance. compare_metrics: Compare fairness across models cross-validation folds. fairness_prediction_density: Density plots protected attribute.","code":""},{"path":"https://mlr3fairness.mlr-org.com/index.html","id":"debiasing-methods","dir":"","previous_headings":"Feature Overview","what":"Debiasing Methods","title":"Fairness Auditing and Debiasing for mlr3","text":"Debiasing methods can used improve fairness given model. mlr3fairness includes several methods can used together mlr3pipelines obtain fair(er) models: Overview:","code":"library(mlr3pipelines) lrn = as_learner(po(\"reweighing_wts\") %>>% lrn(\"classif.rpart\")) rs = resample(lrn, task = tsk(\"compas\")$filter(1:500), rsmp(\"cv\")) rs$score(msr(\"fairness.acc\"))"},{"path":"https://mlr3fairness.mlr-org.com/index.html","id":"fair-learners","dir":"","previous_headings":"Feature Overview","what":"Fair Learners","title":"Fairness Auditing and Debiasing for mlr3","text":"mlr3fairness furthermore contains several learners can used directly learn fair models:","code":""},{"path":"https://mlr3fairness.mlr-org.com/index.html","id":"datasets","dir":"","previous_headings":"Feature Overview","what":"Datasets","title":"Fairness Auditing and Debiasing for mlr3","text":"mlr3fairness includes two fairness datasets: adult compas. See ?adult ?compas additional information regarding columns. can load using tsk(<key>).","code":""},{"path":"https://mlr3fairness.mlr-org.com/index.html","id":"model-cards--datasheets","dir":"","previous_headings":"Feature Overview","what":"Model Cards & Datasheets","title":"Fairness Auditing and Debiasing for mlr3","text":"important step towards achieving equitable outcomes ML models adequate documentation datasets models machine learning. mlr3fairness comes reporting aides models datasets. provides empty templates can used create interactive reports RMarkdown. Usage: report_* functions instantiate new .Rmd template contains set pre-defined questions can used reporting well initial graphics. goal user extends .Rmd file create comprehensive documentation datasets, ML models document model’s fairness. can later converted html report usingrmarkdown’s render.","code":"rmdfile = report_datasheet() rmarkdown::render(rmdfile)"},{"path":"https://mlr3fairness.mlr-org.com/index.html","id":"demo-for-adult-dataset","dir":"","previous_headings":"Feature Overview","what":"Demo for Adult Dataset","title":"Fairness Auditing and Debiasing for mlr3","text":"provide short example detailing mlr3fairness integrates mlr3 ecosystem.","code":"library(mlr3fairness)  #Initialize Fairness Measure fairness_measure = msr(\"fairness.fpr\") #Initialize tasks task_train = tsk(\"adult_train\") task_test = tsk(\"adult_test\") #Initialize model learner = lrn(\"classif.rpart\", predict_type = \"prob\")  #Verify fairness metrics learner$train(task_train) predictions = learner$predict(task_test) predictions$score(fairness_measure, task = task_test)  #Visualize the predicted probability score based on protected attribute. fairness_prediction_density(predictions, task_test)"},{"path":"https://mlr3fairness.mlr-org.com/index.html","id":"extensions","dir":"","previous_headings":"Feature Overview","what":"Extensions","title":"Fairness Auditing and Debiasing for mlr3","text":"mcboost package integrates mlr3 offers additional debiasing post-processing functionality classification, regression survival.","code":""},{"path":"https://mlr3fairness.mlr-org.com/index.html","id":"other-fairness-toolkits-in-r","dir":"","previous_headings":"Feature Overview","what":"Other Fairness Toolkits in R","title":"Fairness Auditing and Debiasing for mlr3","text":"AI Fairness 360 toolkit offers R extension allows bias auditing, visualization mitigation. fairmodels integrates DALEX R-packages similarly allows bias auditing, visualization mitigation. fairness package allows bias auditing R. fairml package contains methods learning de-biased regression classification models. Learners fairml included learners mlr3fairness.","code":""},{"path":"https://mlr3fairness.mlr-org.com/index.html","id":"other-fairness-toolkits","dir":"","previous_headings":"Feature Overview","what":"Other Fairness Toolkits","title":"Fairness Auditing and Debiasing for mlr3","text":"Aequitas Allows constructing fairness report different fairness metrics along visualization Python. fairlearn Allows model auditing debiasing well visualization Python. AI Fairness 360 Allows model auditing debiasing well visualization R Python.","code":""},{"path":"https://mlr3fairness.mlr-org.com/index.html","id":"future-development","dir":"","previous_headings":"Feature Overview","what":"Future Development","title":"Fairness Auditing and Debiasing for mlr3","text":"Several future developments currently planned. Contributions highly welcome! Visualizations: Improvement visualizations, like anchor points others. See issues. Debiasing Methods: debiasing methods, post-processing -processing.","code":""},{"path":"https://mlr3fairness.mlr-org.com/index.html","id":"bugs-feedback-and-questions","dir":"","previous_headings":"","what":"Bugs, Feedback and Questions","title":"Fairness Auditing and Debiasing for mlr3","text":"mlr3fairness free open source software project encourages participation feedback. issues, questions, suggestions feedback, please hesitate open “issue” GitHub page! case problems / bugs, often helpful provide “minimum working example” showcases behaviour. fairness report inspired Aequitas Bias report.","code":""},{"path":"https://mlr3fairness.mlr-org.com/reference/MeasureFairness.html","id":null,"dir":"Reference","previous_headings":"","what":"Base Measure for Fairness — MeasureFairness","title":"Base Measure for Fairness — MeasureFairness","text":"measure extends mlr3::Measure() statistical group fairness: common approach quantifying model's fairness compute difference protected unprotected group according w.r.t. performance metric, e.g. classification error (mlr_measures_classif.ce) false positive rate (mlr_measures_classif.fpr). operation comparison (e.g., difference quotient) can specified using operation parameter, e.g. groupdiff_absdiff() groupdiff_tau(). Composite measures encompasing multiple fairness metrics can built using MeasureFairnessComposite. popular predefined measures can found dictionary mlr_measures.","code":""},{"path":[]},{"path":"https://mlr3fairness.mlr-org.com/reference/MeasureFairness.html","id":"super-class","dir":"Reference","previous_headings":"","what":"Super class","title":"Base Measure for Fairness — MeasureFairness","text":"mlr3::Measure -> MeasureFairness","code":""},{"path":"https://mlr3fairness.mlr-org.com/reference/MeasureFairness.html","id":"public-fields","dir":"Reference","previous_headings":"","what":"Public fields","title":"Base Measure for Fairness — MeasureFairness","text":"base_measure (Measure()) base measure used fairness measures, e.g. mlr_measures_classif.fpr false positive rate. operation (function()) operation used compute difference. function args 'x' 'y' returns single value. Defaults abs(x - y).","code":""},{"path":"https://mlr3fairness.mlr-org.com/reference/MeasureFairness.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"Base Measure for Fairness — MeasureFairness","text":"mlr3::Measure$aggregate() mlr3::Measure$format() mlr3::Measure$help() mlr3::Measure$print() mlr3::Measure$score()","code":""},{"path":"https://mlr3fairness.mlr-org.com/reference/MeasureFairness.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"Base Measure for Fairness — MeasureFairness","text":"MeasureFairness$new() MeasureFairness$clone()","code":""},{"path":"https://mlr3fairness.mlr-org.com/reference/MeasureFairness.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"Base Measure for Fairness — MeasureFairness","text":"Creates new instance R6 class.","code":""},{"path":"https://mlr3fairness.mlr-org.com/reference/MeasureFairness.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Base Measure for Fairness — MeasureFairness","text":"","code":"MeasureFairness$new(   id = NULL,   base_measure,   operation = groupdiff_absdiff,   minimize = TRUE,   range = c(-Inf, Inf) )"},{"path":"https://mlr3fairness.mlr-org.com/reference/MeasureFairness.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Base Measure for Fairness — MeasureFairness","text":"id (character) measure's id. Set 'fairness.<base_measure_id>' ommited. base_measure (Measure()) base metric evaluated within subgroup. operation (function) operation used compute difference. function returns single value given input: computed metric subgroup. Defaults groupdiff_absdiff. minimize (logical()) measure minimized? Defaults TRUE. range (numeric(2)) Range resulting measure. Defaults c(-Inf, Inf).","code":""},{"path":"https://mlr3fairness.mlr-org.com/reference/MeasureFairness.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"Base Measure for Fairness — MeasureFairness","text":"objects class cloneable method.","code":""},{"path":"https://mlr3fairness.mlr-org.com/reference/MeasureFairness.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"Base Measure for Fairness — MeasureFairness","text":"","code":"MeasureFairness$clone(deep = FALSE)"},{"path":"https://mlr3fairness.mlr-org.com/reference/MeasureFairness.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"Base Measure for Fairness — MeasureFairness","text":"deep Whether make deep clone.","code":""},{"path":"https://mlr3fairness.mlr-org.com/reference/MeasureFairness.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Base Measure for Fairness — MeasureFairness","text":"","code":"# Create MeasureFairness to measure the Predictive Parity. t = tsk(\"adult_train\") learner = lrn(\"classif.rpart\", cp = .01) learner$train(t) measure = msr(\"fairness\", base_measure = msr(\"classif.ppv\")) predictions = learner$predict(t) predictions$score(measure, task = t) #> fairness.ppv  #>    0.1202326"},{"path":"https://mlr3fairness.mlr-org.com/reference/MeasureFairnessComposite.html","id":null,"dir":"Reference","previous_headings":"","what":"Composite Fairness Measure — MeasureFairnessComposite","title":"Composite Fairness Measure — MeasureFairnessComposite","text":"Computes composite measure multiple fairness metrics aggregates using aggfun (defaulting mean()).","code":""},{"path":"https://mlr3fairness.mlr-org.com/reference/MeasureFairnessComposite.html","id":"super-class","dir":"Reference","previous_headings":"","what":"Super class","title":"Composite Fairness Measure — MeasureFairnessComposite","text":"mlr3::Measure -> MeasureFairnessComposite","code":""},{"path":"https://mlr3fairness.mlr-org.com/reference/MeasureFairnessComposite.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"Composite Fairness Measure — MeasureFairnessComposite","text":"mlr3::Measure$aggregate() mlr3::Measure$format() mlr3::Measure$help() mlr3::Measure$print() mlr3::Measure$score()","code":""},{"path":"https://mlr3fairness.mlr-org.com/reference/MeasureFairnessComposite.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"Composite Fairness Measure — MeasureFairnessComposite","text":"MeasureFairnessComposite$new() MeasureFairnessComposite$clone()","code":""},{"path":"https://mlr3fairness.mlr-org.com/reference/MeasureFairnessComposite.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"Composite Fairness Measure — MeasureFairnessComposite","text":"Creates new instance R6 class.","code":""},{"path":"https://mlr3fairness.mlr-org.com/reference/MeasureFairnessComposite.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Composite Fairness Measure — MeasureFairnessComposite","text":"","code":"MeasureFairnessComposite$new(   id = NULL,   measures,   aggfun = function(x) mean(x, na.rm = TRUE),   operation = groupdiff_absdiff,   minimize = TRUE,   range = c(-Inf, Inf) )"},{"path":"https://mlr3fairness.mlr-org.com/reference/MeasureFairnessComposite.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Composite Fairness Measure — MeasureFairnessComposite","text":"id (character(1)) Id measure. Defaults concatenation ids measure. measures (list MeasureFairness) List fairness measures aggregate. aggfun (function()) Aggregation function used aggregate results respective measures. Defaults sum. operation (function()) operation used compute difference. function returns single value given input: computed metric subgroup. Defaults groupdiff_absdiff. See MeasureFairness information. minimize (logical(1)) measure minimized? Defaults TRUE. range (numeric(2)) Range resulting measure. Defaults c(-Inf, Inf).","code":""},{"path":"https://mlr3fairness.mlr-org.com/reference/MeasureFairnessComposite.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"Composite Fairness Measure — MeasureFairnessComposite","text":"objects class cloneable method.","code":""},{"path":"https://mlr3fairness.mlr-org.com/reference/MeasureFairnessComposite.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"Composite Fairness Measure — MeasureFairnessComposite","text":"","code":"MeasureFairnessComposite$clone(deep = FALSE)"},{"path":"https://mlr3fairness.mlr-org.com/reference/MeasureFairnessComposite.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"Composite Fairness Measure — MeasureFairnessComposite","text":"deep Whether make deep clone.","code":""},{"path":"https://mlr3fairness.mlr-org.com/reference/MeasureFairnessComposite.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Composite Fairness Measure — MeasureFairnessComposite","text":"","code":"# Equalized Odds Metric MeasureFairnessComposite$new(measures = msrs(c(\"fairness.fpr\", \"fairness.tpr\"))) #> <MeasureFairnessComposite:fairness.fpr_tpr> #> * Packages: mlr3, mlr3fairness #> * Range: [-Inf, Inf] #> * Minimize: TRUE #> * Average: macro #> * Parameters: list() #> * Properties: requires_task #> * Predict type: response  # Other metrics e.g. based on negative rates MeasureFairnessComposite$new(measures = msrs(c(\"fairness.fnr\", \"fairness.tnr\"))) #> <MeasureFairnessComposite:fairness.fnr_tnr> #> * Packages: mlr3, mlr3fairness #> * Range: [-Inf, Inf] #> * Minimize: TRUE #> * Average: macro #> * Parameters: list() #> * Properties: requires_task #> * Predict type: response"},{"path":"https://mlr3fairness.mlr-org.com/reference/MeasureFairnessConstraint.html","id":null,"dir":"Reference","previous_headings":"","what":"Fairness Constraint Measure — MeasureFairnessConstraint","title":"Fairness Constraint Measure — MeasureFairnessConstraint","text":"measure allows constructing 'constraint' measures following form: $$min performance subject fairness < \\epsilon$$","code":""},{"path":[]},{"path":"https://mlr3fairness.mlr-org.com/reference/MeasureFairnessConstraint.html","id":"super-class","dir":"Reference","previous_headings":"","what":"Super class","title":"Fairness Constraint Measure — MeasureFairnessConstraint","text":"mlr3::Measure -> MeasureFairnessConstraint","code":""},{"path":"https://mlr3fairness.mlr-org.com/reference/MeasureFairnessConstraint.html","id":"public-fields","dir":"Reference","previous_headings":"","what":"Public fields","title":"Fairness Constraint Measure — MeasureFairnessConstraint","text":"performance_measure (Measure()) performance measure used. fairness_measure (Measure()) fairness measure used. epsilon (numeric) Deviation perfect fairness allowed.","code":""},{"path":"https://mlr3fairness.mlr-org.com/reference/MeasureFairnessConstraint.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"Fairness Constraint Measure — MeasureFairnessConstraint","text":"mlr3::Measure$aggregate() mlr3::Measure$format() mlr3::Measure$help() mlr3::Measure$print() mlr3::Measure$score()","code":""},{"path":"https://mlr3fairness.mlr-org.com/reference/MeasureFairnessConstraint.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"Fairness Constraint Measure — MeasureFairnessConstraint","text":"MeasureFairnessConstraint$new() MeasureFairnessConstraint$clone()","code":""},{"path":"https://mlr3fairness.mlr-org.com/reference/MeasureFairnessConstraint.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"Fairness Constraint Measure — MeasureFairnessConstraint","text":"Creates new instance R6 class.","code":""},{"path":"https://mlr3fairness.mlr-org.com/reference/MeasureFairnessConstraint.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fairness Constraint Measure — MeasureFairnessConstraint","text":"","code":"MeasureFairnessConstraint$new(   id = NULL,   performance_measure,   fairness_measure,   epsilon = 0.01,   range = c(-Inf, Inf) )"},{"path":"https://mlr3fairness.mlr-org.com/reference/MeasureFairnessConstraint.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fairness Constraint Measure — MeasureFairnessConstraint","text":"id (character) measure's id. Set 'fairness.<base_measure_id>' ommited. performance_measure (Measure()) measure used measure performance (e.g. accuracy). fairness_measure (Measure()) measure used measure fairness (e.g. equalized odds). epsilon (numeric) Allowed divergence perfect fairness. Initialized 0.01. range (numeric) Range resulting measure. Defaults c(-Inf, Inf).","code":""},{"path":"https://mlr3fairness.mlr-org.com/reference/MeasureFairnessConstraint.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"Fairness Constraint Measure — MeasureFairnessConstraint","text":"objects class cloneable method.","code":""},{"path":"https://mlr3fairness.mlr-org.com/reference/MeasureFairnessConstraint.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"Fairness Constraint Measure — MeasureFairnessConstraint","text":"","code":"MeasureFairnessConstraint$clone(deep = FALSE)"},{"path":"https://mlr3fairness.mlr-org.com/reference/MeasureFairnessConstraint.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fairness Constraint Measure — MeasureFairnessConstraint","text":"deep Whether make deep clone.","code":""},{"path":"https://mlr3fairness.mlr-org.com/reference/MeasureFairnessConstraint.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Fairness Constraint Measure — MeasureFairnessConstraint","text":"","code":"# Accurcy subject to equalized odds fairness constraint: library(mlr3) t = tsk(\"adult_train\") learner = lrn(\"classif.rpart\", cp = .01) learner$train(t) measure = msr(\"fairness.constraint\", id = \"acc_tpr\", msr(\"classif.acc\"), msr(\"fairness.tpr\")) predictions = learner$predict(t) predictions$score(measure, task = t) #>     acc_tpr  #> -0.05976471"},{"path":"https://mlr3fairness.mlr-org.com/reference/MeasureSubgroup.html","id":null,"dir":"Reference","previous_headings":"","what":"Evaluate a metric on a subgroup — MeasureSubgroup","title":"Evaluate a metric on a subgroup — MeasureSubgroup","text":"Allows calculation arbitrary mlr3::Measure()s selected sub-group.","code":""},{"path":[]},{"path":"https://mlr3fairness.mlr-org.com/reference/MeasureSubgroup.html","id":"super-class","dir":"Reference","previous_headings":"","what":"Super class","title":"Evaluate a metric on a subgroup — MeasureSubgroup","text":"mlr3::Measure -> MeasureSubgroup","code":""},{"path":"https://mlr3fairness.mlr-org.com/reference/MeasureSubgroup.html","id":"public-fields","dir":"Reference","previous_headings":"","what":"Public fields","title":"Evaluate a metric on a subgroup — MeasureSubgroup","text":"base_measure (Measure()) base measure used fairness measures, e.g. mlr_measures_classif.fpr false positive rate. subgroup (character)|(integer) Subgroup identifier. intersect (logical) groups intersected?","code":""},{"path":"https://mlr3fairness.mlr-org.com/reference/MeasureSubgroup.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"Evaluate a metric on a subgroup — MeasureSubgroup","text":"mlr3::Measure$aggregate() mlr3::Measure$format() mlr3::Measure$help() mlr3::Measure$print() mlr3::Measure$score()","code":""},{"path":"https://mlr3fairness.mlr-org.com/reference/MeasureSubgroup.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"Evaluate a metric on a subgroup — MeasureSubgroup","text":"MeasureSubgroup$new() MeasureSubgroup$clone()","code":""},{"path":"https://mlr3fairness.mlr-org.com/reference/MeasureSubgroup.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"Evaluate a metric on a subgroup — MeasureSubgroup","text":"Creates new instance R6 class.","code":""},{"path":"https://mlr3fairness.mlr-org.com/reference/MeasureSubgroup.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Evaluate a metric on a subgroup — MeasureSubgroup","text":"","code":"MeasureSubgroup$new(id = NULL, base_measure, subgroup, intersect = TRUE)"},{"path":"https://mlr3fairness.mlr-org.com/reference/MeasureSubgroup.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Evaluate a metric on a subgroup — MeasureSubgroup","text":"id (character) measure's id. Set 'fairness.<base_measure_id>' ommited. base_measure (Measure()) measure used measure fairness. subgroup (character)|(integer) Subgroup identifier. Either value protected attribute position task$levels. intersect logical  multiple pta groups intersected? Defaults TRUE. relevant one pta columns provided.","code":""},{"path":"https://mlr3fairness.mlr-org.com/reference/MeasureSubgroup.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"Evaluate a metric on a subgroup — MeasureSubgroup","text":"objects class cloneable method.","code":""},{"path":"https://mlr3fairness.mlr-org.com/reference/MeasureSubgroup.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"Evaluate a metric on a subgroup — MeasureSubgroup","text":"","code":"MeasureSubgroup$clone(deep = FALSE)"},{"path":"https://mlr3fairness.mlr-org.com/reference/MeasureSubgroup.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"Evaluate a metric on a subgroup — MeasureSubgroup","text":"deep Whether make deep clone.","code":""},{"path":"https://mlr3fairness.mlr-org.com/reference/MeasureSubgroup.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Evaluate a metric on a subgroup — MeasureSubgroup","text":"","code":"# Create MeasureFairness to measure the Predictive Parity. t = tsk(\"adult_train\") learner = lrn(\"classif.rpart\", cp = .01) learner$train(t) measure = msr(\"subgroup\", base_measure = msr(\"classif.acc\"), subgroup = \"Female\") predictions = learner$predict(t) predictions$score(measure, task = t) #> subgroup.acc_Female  #>           0.9232628"},{"path":"https://mlr3fairness.mlr-org.com/reference/adult.html","id":null,"dir":"Reference","previous_headings":"","what":"Adult Dataset — adult","title":"Adult Dataset — adult","text":"Dataset used predict whether income exceeds $50K/yr based census data. Also known \"Census Income\" dataset Train dataset contains 13 features 30178 observations. Test dataset contains 13 features 15315 observations. Target column \"target\": binary factor 1: <=50K 2: >50K annual income. column \"sex\" set protected attribute.","code":""},{"path":"https://mlr3fairness.mlr-org.com/reference/adult.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Adult Dataset — adult","text":"Dua, Dheeru, Graff, Casey (2017). “UCI Machine Learning Repository.” http://archive.ics.uci.edu/ml/.","code":""},{"path":"https://mlr3fairness.mlr-org.com/reference/adult.html","id":"pre-processing","dir":"Reference","previous_headings":"","what":"Pre-processing","title":"Adult Dataset — adult","text":"fnlwgt Remove final weight, number people census believes entry represents native-country Remove Native Country, country origin individual Rows containing NA workclass occupation removed. Pre-processing inspired article: @url https://cseweb.ucsd.edu//classes/sp15/cse190-c/reports/sp15/048.pdf","code":""},{"path":"https://mlr3fairness.mlr-org.com/reference/adult.html","id":"metadata","dir":"Reference","previous_headings":"","what":"Metadata","title":"Adult Dataset — adult","text":"(integer) age: age individuals (factor) workclass: general term represent employment status individual (factor) education: highest level education achieved individual. (integer) education_num: highest level education achieved numerical form. (factor) marital_status: marital status individual. (factor) occupation: general type occupation individual (factor) relationship: twhether individual relationship- (factor) race: Descriptions individual’s race (factor) sex: biological sex individual (integer) captain-gain: capital gains individual (integer) captain-loss: capital loss individual (integer) hours-per-week: hours individual reported work per week (factor) target: whether individual makes $50,000 annually","code":""},{"path":"https://mlr3fairness.mlr-org.com/reference/adult.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Adult Dataset — adult","text":"","code":"data(\"adult_test\", package = \"mlr3fairness\") data(\"adult_train\", package = \"mlr3fairness\")"},{"path":"https://mlr3fairness.mlr-org.com/reference/compas.html","id":null,"dir":"Reference","previous_headings":"","what":"COMPAS Dataset — compas","title":"COMPAS Dataset — compas","text":"COMPAS dataset includes processed COMPAS data 2013-2014. data cleaning process followed guidance original COMPAS repo. Contains 6172 observations 14 features. target column either \"is_recid\" \"two_year_recid\", often \"two_year_recid\" prefered. column \"sex\" set protected attribute, often \"race\" used. classification task compas data set. classification task compas data set. observations filtered, keeping observations race \"Caucasian\" \"African-American\". protected attribute set \"race\".","code":""},{"path":"https://mlr3fairness.mlr-org.com/reference/compas.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"COMPAS Dataset — compas","text":"R6::R6Class inheriting TaskClassif. R6::R6Class inheriting TaskClassif.","code":""},{"path":"https://mlr3fairness.mlr-org.com/reference/compas.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"COMPAS Dataset — compas","text":"https://github.com/propublica/compas-analysis","code":""},{"path":"https://mlr3fairness.mlr-org.com/reference/compas.html","id":"pre-processing","dir":"Reference","previous_headings":"","what":"Pre-processing","title":"COMPAS Dataset — compas","text":"Identifying columns removed Removed outliers abs(days_b_screening_arrest) >= 30. Removed observations is_recid != -1. Removed observations c_charge_degree != \"O\". Removed observations score_text != 'N/'. Factorize features categorical. Add length stay (c_jail_out - c_jail_in) dataset. Pre-processing Resouce: @url https://github.com/propublica/compas-analysis/blob/master/Compas%20Analysis.ipynb","code":""},{"path":"https://mlr3fairness.mlr-org.com/reference/compas.html","id":"metadata","dir":"Reference","previous_headings":"","what":"Metadata","title":"COMPAS Dataset — compas","text":"(integer) age : age defendants. (factor) c_charge_degree : charge degree defendants. F: Felony M: Misdemeanor (factor) race: race defendants. (factor) age_cat: age category defendants. (factor) score_text: score category defendants. (factor) sex: sex defendants. (integer) priors_count: prior criminal records defendants. (integer) days_b_screening_arrest: count days screening date (original) arrest date. far apart, may indicate error. value negative, indicate screening date happened arrest date. (integer) decile_score: Indicate risk recidivism (Min=1, Max=10) (integer) is_recid: Binary variable indicate whether defendant rearrested time. (factor) two_year_recid: Binary variable indicate whether defendant rearrested within two years. (numeric) length_of_stay: count days stay jail.","code":""},{"path":"https://mlr3fairness.mlr-org.com/reference/compas.html","id":"construction","dir":"Reference","previous_headings":"","what":"Construction","title":"COMPAS Dataset — compas","text":"","code":"mlr_tasks$get(\"compas\") tsk(\"compas\") mlr_tasks$get(\"compas_race_binary\") tsk(\"compas_race_binary\")"},{"path":"https://mlr3fairness.mlr-org.com/reference/compas.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"COMPAS Dataset — compas","text":"","code":"data(\"compas\", package = \"mlr3fairness\")"},{"path":"https://mlr3fairness.mlr-org.com/reference/fairness_accuracy_tradeoff.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot Fairness Accuracy Trade-offs — fairness_accuracy_tradeoff","title":"Plot Fairness Accuracy Trade-offs — fairness_accuracy_tradeoff","text":"Provides visualization wrt. trade-offs fairness accuracy metrics across learners resampling iterations. can assist gauging optimal model set options along estimates variance (individual resampling iterations).","code":""},{"path":"https://mlr3fairness.mlr-org.com/reference/fairness_accuracy_tradeoff.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot Fairness Accuracy Trade-offs — fairness_accuracy_tradeoff","text":"","code":"fairness_accuracy_tradeoff(object, ...)"},{"path":"https://mlr3fairness.mlr-org.com/reference/fairness_accuracy_tradeoff.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot Fairness Accuracy Trade-offs — fairness_accuracy_tradeoff","text":"object (PredictionClassif | BenchmarkResult | ResampleResult) binary class prediction object evaluated. provided PredictionClassif. one point indicate accuracy fairness metrics current predictions. Requires also passing Task. provided ResampleResult. plot compare accuracy fairness metrics model, different resampling iterations  well aggregate indicated cross. provided BenchmarkResult. plot compare accuracy fairness metrics models resampling iterations. Points colored according learner_id faceted task_id. aggregated score indicated cross. ... Arguments passed methods. : fairness_measure (Measure) fairness measures evaluated. Default measure set msr(\"fairness.fpr\") accuracy_measure (Measure) accuracy measure evaluated. Default measure set msr(\"classif.acc\"). task (TaskClassif) data task contains protected column, required class object (PredictionClassif)","code":""},{"path":"https://mlr3fairness.mlr-org.com/reference/fairness_accuracy_tradeoff.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot Fairness Accuracy Trade-offs — fairness_accuracy_tradeoff","text":"'ggplot2' object.","code":""},{"path":"https://mlr3fairness.mlr-org.com/reference/fairness_accuracy_tradeoff.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot Fairness Accuracy Trade-offs — fairness_accuracy_tradeoff","text":"","code":"library(mlr3learners) library(ggplot2)  # Setup the Fairness measure and tasks task = tsk(\"adult_train\")$filter(1:500) learner = lrn(\"classif.ranger\", predict_type = \"prob\") fairness_measure = msr(\"fairness.tpr\")  # Example 1 - A single prediction learner$train(task) predictions = learner$predict(task) fairness_accuracy_tradeoff(predictions, fairness_measure, task = task)   # Example2 - A benchmark design = benchmark_grid(   tasks = task,   learners = lrns(c(\"classif.featureless\", \"classif.rpart\"),     predict_type = \"prob\", predict_sets = c(\"train\", \"test\")),   resamplings = rsmps(\"cv\", folds = 2) ) bmr = benchmark(design) fairness_accuracy_tradeoff(bmr, fairness_measure)"},{"path":"https://mlr3fairness.mlr-org.com/reference/fairness_compare_metrics.html","id":null,"dir":"Reference","previous_headings":"","what":"Compare different metrics — compare_metrics","title":"Compare different metrics — compare_metrics","text":"Compare learners respect one multiple metrics. Metrics can limited fairness metrics.","code":""},{"path":"https://mlr3fairness.mlr-org.com/reference/fairness_compare_metrics.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compare different metrics — compare_metrics","text":"","code":"compare_metrics(object, ...)"},{"path":"https://mlr3fairness.mlr-org.com/reference/fairness_compare_metrics.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compare different metrics — compare_metrics","text":"object (PredictionClassif | BenchmarkResult | ResampleResult) object create plot . provided (PredictionClassif). visualization compare fairness metrics among binary level protected field bar plots. provided (ResampleResult). visualization generate boxplots fairness metrics, compare among binary level protected field. provided (BenchmarkResult). visualization generate boxplots fairness metrics, compare among binary level protected field models implemented. ... arguments passed methods, : fairness_measures (list Measure) fairness measures evaluated object, single Measure list Measures. Default measure set msr(\"fairness.acc\"). task (TaskClassif) data task contains protected column, required object (PredictionClassif).","code":""},{"path":"https://mlr3fairness.mlr-org.com/reference/fairness_compare_metrics.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compare different metrics — compare_metrics","text":"'ggplo2' object.","code":""},{"path":"https://mlr3fairness.mlr-org.com/reference/fairness_compare_metrics.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compare different metrics — compare_metrics","text":"","code":"library(mlr3learners)  # Setup the Fairness Measures and tasks task = tsk(\"adult_train\")$filter(1:500) learner = lrn(\"classif.ranger\", predict_type = \"prob\") learner$train(task) predictions = learner$predict(task) design = benchmark_grid(   tasks = task,   learners = lrns(c(\"classif.ranger\", \"classif.rpart\"),     predict_type = \"prob\", predict_sets = c(\"train\", \"predict\")),   resamplings = rsmps(\"cv\", folds = 3) )  bmr = benchmark(design) fairness_measure = msr(\"fairness.tpr\") fairness_measures = msrs(c(\"fairness.tpr\", \"fairness.fnr\", \"fairness.acc\"))  # Predictions compare_metrics(predictions, fairness_measure, task)  compare_metrics(predictions, fairness_measures, task)   # BenchmarkResult and ResamplingResult compare_metrics(bmr, fairness_measure) #> Warning: Measure 'fairness.tpr' needs predict sets 'test', but learner 'classif.ranger' only predicted on sets 'train', 'predict' #> Warning: Measure 'fairness.tpr' needs predict sets 'test', but learner 'classif.rpart' only predicted on sets 'train', 'predict' #> Warning: Removed 2 rows containing missing values (geom_bar).  compare_metrics(bmr, fairness_measures) #> Warning: Measure 'fairness.tpr' needs predict sets 'test', but learner 'classif.ranger' only predicted on sets 'train', 'predict' #> Warning: Measure 'fairness.fnr' needs predict sets 'test', but learner 'classif.ranger' only predicted on sets 'train', 'predict' #> Warning: Measure 'fairness.acc' needs predict sets 'test', but learner 'classif.ranger' only predicted on sets 'train', 'predict' #> Warning: Measure 'fairness.tpr' needs predict sets 'test', but learner 'classif.rpart' only predicted on sets 'train', 'predict' #> Warning: Measure 'fairness.fnr' needs predict sets 'test', but learner 'classif.rpart' only predicted on sets 'train', 'predict' #> Warning: Measure 'fairness.acc' needs predict sets 'test', but learner 'classif.rpart' only predicted on sets 'train', 'predict' #> Warning: Removed 6 rows containing missing values (geom_bar)."},{"path":"https://mlr3fairness.mlr-org.com/reference/fairness_prediction_density.html","id":null,"dir":"Reference","previous_headings":"","what":"Probability Density Plot — fairness_prediction_density","title":"Probability Density Plot — fairness_prediction_density","text":"Visualizes per-subgroup densities across learners, task class. plot combination boxplot violin plot. y-axis shows levels protected columns. x-axis shows predicted probability. title plot demonstrate class predicted probability.","code":""},{"path":"https://mlr3fairness.mlr-org.com/reference/fairness_prediction_density.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Probability Density Plot — fairness_prediction_density","text":"","code":"fairness_prediction_density(object, ...)"},{"path":"https://mlr3fairness.mlr-org.com/reference/fairness_prediction_density.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Probability Density Plot — fairness_prediction_density","text":"object (PredictionClassif | ResampleResult | BenchmarkResult) binary class prediction object evaluated. PredictionClassif, Task required. ... arguments passed methods, : task (TaskClassif) data task contains protected column. type character plot type. Either violin density.","code":""},{"path":"https://mlr3fairness.mlr-org.com/reference/fairness_prediction_density.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Probability Density Plot — fairness_prediction_density","text":"'ggplot2' object.","code":""},{"path":"https://mlr3fairness.mlr-org.com/reference/fairness_prediction_density.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Probability Density Plot — fairness_prediction_density","text":"","code":"library(mlr3learners)  task = tsk(\"adult_train\")$filter(1:500) learner = lrn(\"classif.rpart\", predict_type = \"prob\", cp = 0.001) learner$train(task)  # For prediction predictions = learner$predict(task) fairness_prediction_density(predictions, task)   # For resampling rr = resample(task, learner, rsmp(\"cv\")) fairness_prediction_density(rr)"},{"path":"https://mlr3fairness.mlr-org.com/reference/fairness_tensor.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute the Fairness Tensor given a Prediction and a Task — fairness_tensor","title":"Compute the Fairness Tensor given a Prediction and a Task — fairness_tensor","text":"fairness tensor list groupwise confusion matrices.","code":""},{"path":"https://mlr3fairness.mlr-org.com/reference/fairness_tensor.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute the Fairness Tensor given a Prediction and a Task — fairness_tensor","text":"","code":"fairness_tensor(object, ...)  # S3 method for data.table fairness_tensor(object, task, ...)  # S3 method for PredictionClassif fairness_tensor(object, task, ...)  # S3 method for ResampleResult fairness_tensor(object, ...)"},{"path":"https://mlr3fairness.mlr-org.com/reference/fairness_tensor.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute the Fairness Tensor given a Prediction and a Task — fairness_tensor","text":"object (data.table() | PredictionClassif | ResampleResult) data.table columns truth prediction, PredictionClassif ResampleResult. ... Currently used. task (TaskClassif) TaskClassif. Needs col_role \"pta\" set.","code":""},{"path":"https://mlr3fairness.mlr-org.com/reference/fairness_tensor.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute the Fairness Tensor given a Prediction and a Task — fairness_tensor","text":"list() confusion matrix every group \"pta\".","code":""},{"path":"https://mlr3fairness.mlr-org.com/reference/fairness_tensor.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compute the Fairness Tensor given a Prediction and a Task — fairness_tensor","text":"","code":"task = tsk(\"compas\") prediction = lrn(\"classif.rpart\")$train(task)$predict(task) fairness_tensor(prediction, task) #> $Male #>         truth #> response    0    1 #>        0 2442    0 #>        1  159 2396 #>  #> $Female #>         truth #> response   0   1 #>        0 740   0 #>        1  22 413 #>"},{"path":"https://mlr3fairness.mlr-org.com/reference/groupdiff_tau.html","id":null,"dir":"Reference","previous_headings":"","what":"Groupwise Operations — groupdiff_tau","title":"Groupwise Operations — groupdiff_tau","text":"groupdiff_tau() computes \\(min(x/y, y/x)\\), .e. smallest symmetric ratio \\(x\\) eqny smaller 1. \\(x\\) vector, symmetric ratio elements \\(x\\) computed. groupdiff_absdiff() computes \\(max(abs(x-y, y-x))\\), .e. smallest absolute difference \\(x\\) \\(y\\). \\(x\\) vector, symmetric absolute difference elements \\(x\\) computed.","code":""},{"path":"https://mlr3fairness.mlr-org.com/reference/groupdiff_tau.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Groupwise Operations — groupdiff_tau","text":"","code":"groupdiff_tau(x)  groupdiff_absdiff(x)  groupdiff_diff(x)"},{"path":"https://mlr3fairness.mlr-org.com/reference/groupdiff_tau.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Groupwise Operations — groupdiff_tau","text":"x (numeric()) Measured performance group 1, 2, ...","code":""},{"path":"https://mlr3fairness.mlr-org.com/reference/groupdiff_tau.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Groupwise Operations — groupdiff_tau","text":"single numeric.","code":""},{"path":"https://mlr3fairness.mlr-org.com/reference/groupdiff_tau.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Groupwise Operations — groupdiff_tau","text":"","code":"groupdiff_tau(1:3) #> [1] 0.3333333 groupdiff_diff(1:3) #> [1] -2 groupdiff_absdiff(1:3) #> [1] 2"},{"path":"https://mlr3fairness.mlr-org.com/reference/groupwise_metrics.html","id":null,"dir":"Reference","previous_headings":"","what":"Evaluate a metric on each protected subgroup in a task. — groupwise_metrics","title":"Evaluate a metric on each protected subgroup in a task. — groupwise_metrics","text":"Instantiates one new measure per protected attribute group task. metric evaluated predictions made given specific subgroup.","code":""},{"path":"https://mlr3fairness.mlr-org.com/reference/groupwise_metrics.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Evaluate a metric on each protected subgroup in a task. — groupwise_metrics","text":"","code":"groupwise_metrics(base_measure, task, intersect = TRUE)"},{"path":"https://mlr3fairness.mlr-org.com/reference/groupwise_metrics.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Evaluate a metric on each protected subgroup in a task. — groupwise_metrics","text":"base_measure (Measure()) base metric evaluated within subgroup. task Task mlr3::Task() instantiate measures . intersect logical  multiple pta groups intersected? Defaults TRUE. relevant one pta columns provided.","code":""},{"path":"https://mlr3fairness.mlr-org.com/reference/groupwise_metrics.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Evaluate a metric on each protected subgroup in a task. — groupwise_metrics","text":"list   List mlr3::Measures.","code":""},{"path":[]},{"path":"https://mlr3fairness.mlr-org.com/reference/groupwise_metrics.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Evaluate a metric on each protected subgroup in a task. — groupwise_metrics","text":"","code":"t = tsk(\"compas\")   l = lrn(\"classif.rpart\")   m = groupwise_metrics(msr(\"classif.acc\"), t)   l$train(t)$predict(t)$score(m, t) #>   subgroup.acc_Male subgroup.acc_Female  #>           0.9681809           0.9812766"},{"path":"https://mlr3fairness.mlr-org.com/reference/mlr3fairness-package.html","id":null,"dir":"Reference","previous_headings":"","what":"mlr3fairness: Fairness Auditing and Debiasing for 'mlr3' — mlr3fairness-package","title":"mlr3fairness: Fairness Auditing and Debiasing for 'mlr3' — mlr3fairness-package","text":"Integrates fairness auditing bias mitigation methods 'mlr3' ecosystem. includes fairness metrics, reporting tools, visualizations bias mitigation techniques \"Reweighing\" described 'Kamiran, Calders' (2012) doi:10.1007/s10115-011-0463-8  \"Equalized Odds\" described 'Hardt et al.' (2016) https://papers.nips.cc/paper/2016/file/9d2682367c3935defcb1f9e247a97c0d-Paper.pdf. Integration 'mlr3' allows auditing ML models well convenient joint tuning machine learning algorithms debiasing methods.","code":""},{"path":[]},{"path":"https://mlr3fairness.mlr-org.com/reference/mlr3fairness-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"mlr3fairness: Fairness Auditing and Debiasing for 'mlr3' — mlr3fairness-package","text":"Maintainer: Florian Pfisterer pfistererf@googlemail.com (ORCID) Authors: Wei Siyi weisiyi2@gmail.com Michel Lang michellang@gmail.com (ORCID)","code":""},{"path":"https://mlr3fairness.mlr-org.com/reference/mlr_learners_classif.fairfgrrm.html","id":null,"dir":"Reference","previous_headings":"","what":"Classification Fair Generalized Ridge Regression Learner — mlr_learners_classif.fairfgrrm","title":"Classification Fair Generalized Ridge Regression Learner — mlr_learners_classif.fairfgrrm","text":"Calls fairml::fgrrm package fairml.","code":""},{"path":"https://mlr3fairness.mlr-org.com/reference/mlr_learners_classif.fairfgrrm.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Classification Fair Generalized Ridge Regression Learner — mlr_learners_classif.fairfgrrm","text":"Fair generalized ridge regression model implemented via package fairml. 'unfairness' parameter set 0.05 default.","code":""},{"path":"https://mlr3fairness.mlr-org.com/reference/mlr_learners_classif.fairfgrrm.html","id":"dictionary","dir":"Reference","previous_headings":"","what":"Dictionary","title":"Classification Fair Generalized Ridge Regression Learner — mlr_learners_classif.fairfgrrm","text":"Learner can instantiated via dictionary mlr_learners associated sugar function lrn():","code":"mlr_learners$get(\"classif.fairfgrrm\") lrn(\"classif.fairfgrrm\")"},{"path":"https://mlr3fairness.mlr-org.com/reference/mlr_learners_classif.fairfgrrm.html","id":"meta-information","dir":"Reference","previous_headings":"","what":"Meta Information","title":"Classification Fair Generalized Ridge Regression Learner — mlr_learners_classif.fairfgrrm","text":"Task type: “classif” Predict Types: “response”, “prob” Feature Types: “integer”, “numeric”, “factor”, “ordered” Required Packages: mlr3, fairml","code":""},{"path":[]},{"path":"https://mlr3fairness.mlr-org.com/reference/mlr_learners_classif.fairfgrrm.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Classification Fair Generalized Ridge Regression Learner — mlr_learners_classif.fairfgrrm","text":"Scutari M, Panero F, Proissl M (2021). “Achieving Fairness Simple Ridge Penalty.” arXiv preprint arXiv:2105.13817.","code":""},{"path":[]},{"path":"https://mlr3fairness.mlr-org.com/reference/mlr_learners_classif.fairfgrrm.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Classification Fair Generalized Ridge Regression Learner — mlr_learners_classif.fairfgrrm","text":"pfistfl","code":""},{"path":"https://mlr3fairness.mlr-org.com/reference/mlr_learners_classif.fairfgrrm.html","id":"super-classes","dir":"Reference","previous_headings":"","what":"Super classes","title":"Classification Fair Generalized Ridge Regression Learner — mlr_learners_classif.fairfgrrm","text":"mlr3::Learner -> mlr3::LearnerClassif -> LearnerClassifFairfgrrm","code":""},{"path":"https://mlr3fairness.mlr-org.com/reference/mlr_learners_classif.fairfgrrm.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"Classification Fair Generalized Ridge Regression Learner — mlr_learners_classif.fairfgrrm","text":"mlr3::Learner$base_learner() mlr3::Learner$format() mlr3::Learner$help() mlr3::Learner$predict() mlr3::Learner$predict_newdata() mlr3::Learner$print() mlr3::Learner$reset() mlr3::Learner$train()","code":""},{"path":"https://mlr3fairness.mlr-org.com/reference/mlr_learners_classif.fairfgrrm.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"Classification Fair Generalized Ridge Regression Learner — mlr_learners_classif.fairfgrrm","text":"LearnerClassifFairfgrrm$new() LearnerClassifFairfgrrm$clone()","code":""},{"path":"https://mlr3fairness.mlr-org.com/reference/mlr_learners_classif.fairfgrrm.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"Classification Fair Generalized Ridge Regression Learner — mlr_learners_classif.fairfgrrm","text":"Creates new instance R6 class.","code":""},{"path":"https://mlr3fairness.mlr-org.com/reference/mlr_learners_classif.fairfgrrm.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Classification Fair Generalized Ridge Regression Learner — mlr_learners_classif.fairfgrrm","text":"","code":"LearnerClassifFairfgrrm$new()"},{"path":"https://mlr3fairness.mlr-org.com/reference/mlr_learners_classif.fairfgrrm.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"Classification Fair Generalized Ridge Regression Learner — mlr_learners_classif.fairfgrrm","text":"objects class cloneable method.","code":""},{"path":"https://mlr3fairness.mlr-org.com/reference/mlr_learners_classif.fairfgrrm.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"Classification Fair Generalized Ridge Regression Learner — mlr_learners_classif.fairfgrrm","text":"","code":"LearnerClassifFairfgrrm$clone(deep = FALSE)"},{"path":"https://mlr3fairness.mlr-org.com/reference/mlr_learners_classif.fairfgrrm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Classification Fair Generalized Ridge Regression Learner — mlr_learners_classif.fairfgrrm","text":"deep Whether make deep clone.","code":""},{"path":"https://mlr3fairness.mlr-org.com/reference/mlr_learners_classif.fairfgrrm.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Classification Fair Generalized Ridge Regression Learner — mlr_learners_classif.fairfgrrm","text":"","code":"# stop example failing with warning if package not installed learner = suppressWarnings(mlr3::lrn(\"classif.fairfgrrm\")) print(learner) #> <LearnerClassifFairfgrrm:classif.fairfgrrm> #> * Model: - #> * Parameters: unfairness=0.05, intersect=FALSE #> * Packages: mlr3, fairml #> * Predict Types:  [response], prob #> * Feature Types: integer, numeric, factor, ordered #> * Properties: twoclass  # available parameters: learner$param_set$ids() #> [1] \"lambda\"         \"definition\"     \"save.auxiliary\" \"unfairness\"     #> [5] \"family\"         \"intersect\""},{"path":"https://mlr3fairness.mlr-org.com/reference/mlr_learners_classif.fairzlrm.html","id":null,"dir":"Reference","previous_headings":"","what":"Classification Fair Logistic Regression With Covariance Constraints Learner — mlr_learners_classif.fairzlrm","title":"Classification Fair Logistic Regression With Covariance Constraints Learner — mlr_learners_classif.fairzlrm","text":"Calls fairml::zlrm package fairml.","code":""},{"path":"https://mlr3fairness.mlr-org.com/reference/mlr_learners_classif.fairzlrm.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Classification Fair Logistic Regression With Covariance Constraints Learner — mlr_learners_classif.fairzlrm","text":"Generalized fair regression model Zafar et al., 2019 implemented via package fairml. 'unfairness' parameter set 0.05 default. optimized fairness metric statistical parity.","code":""},{"path":"https://mlr3fairness.mlr-org.com/reference/mlr_learners_classif.fairzlrm.html","id":"dictionary","dir":"Reference","previous_headings":"","what":"Dictionary","title":"Classification Fair Logistic Regression With Covariance Constraints Learner — mlr_learners_classif.fairzlrm","text":"Learner can instantiated via dictionary mlr_learners associated sugar function lrn():","code":"mlr_learners$get(\"classif.fairzlrm\") lrn(\"classif.fairzlrm\")"},{"path":"https://mlr3fairness.mlr-org.com/reference/mlr_learners_classif.fairzlrm.html","id":"meta-information","dir":"Reference","previous_headings":"","what":"Meta Information","title":"Classification Fair Logistic Regression With Covariance Constraints Learner — mlr_learners_classif.fairzlrm","text":"Task type: “classif” Predict Types: “response”, “prob” Feature Types: “integer”, “numeric”, “factor”, “ordered” Required Packages: mlr3, fairml","code":""},{"path":[]},{"path":"https://mlr3fairness.mlr-org.com/reference/mlr_learners_classif.fairzlrm.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Classification Fair Logistic Regression With Covariance Constraints Learner — mlr_learners_classif.fairzlrm","text":"BJ Z, V, M G, KP G (2019). “Fairness Constraints: Flexible Approach Fair Classification.” Journal Machine Learning Research, 30, 1-42.","code":""},{"path":[]},{"path":"https://mlr3fairness.mlr-org.com/reference/mlr_learners_classif.fairzlrm.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Classification Fair Logistic Regression With Covariance Constraints Learner — mlr_learners_classif.fairzlrm","text":"pfistfl","code":""},{"path":"https://mlr3fairness.mlr-org.com/reference/mlr_learners_classif.fairzlrm.html","id":"super-classes","dir":"Reference","previous_headings":"","what":"Super classes","title":"Classification Fair Logistic Regression With Covariance Constraints Learner — mlr_learners_classif.fairzlrm","text":"mlr3::Learner -> mlr3::LearnerClassif -> LearnerClassifFairzlrm","code":""},{"path":"https://mlr3fairness.mlr-org.com/reference/mlr_learners_classif.fairzlrm.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"Classification Fair Logistic Regression With Covariance Constraints Learner — mlr_learners_classif.fairzlrm","text":"mlr3::Learner$base_learner() mlr3::Learner$format() mlr3::Learner$help() mlr3::Learner$predict() mlr3::Learner$predict_newdata() mlr3::Learner$print() mlr3::Learner$reset() mlr3::Learner$train()","code":""},{"path":"https://mlr3fairness.mlr-org.com/reference/mlr_learners_classif.fairzlrm.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"Classification Fair Logistic Regression With Covariance Constraints Learner — mlr_learners_classif.fairzlrm","text":"LearnerClassifFairzlrm$new() LearnerClassifFairzlrm$clone()","code":""},{"path":"https://mlr3fairness.mlr-org.com/reference/mlr_learners_classif.fairzlrm.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"Classification Fair Logistic Regression With Covariance Constraints Learner — mlr_learners_classif.fairzlrm","text":"Creates new instance R6 class.","code":""},{"path":"https://mlr3fairness.mlr-org.com/reference/mlr_learners_classif.fairzlrm.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Classification Fair Logistic Regression With Covariance Constraints Learner — mlr_learners_classif.fairzlrm","text":"","code":"LearnerClassifFairzlrm$new()"},{"path":"https://mlr3fairness.mlr-org.com/reference/mlr_learners_classif.fairzlrm.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"Classification Fair Logistic Regression With Covariance Constraints Learner — mlr_learners_classif.fairzlrm","text":"objects class cloneable method.","code":""},{"path":"https://mlr3fairness.mlr-org.com/reference/mlr_learners_classif.fairzlrm.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"Classification Fair Logistic Regression With Covariance Constraints Learner — mlr_learners_classif.fairzlrm","text":"","code":"LearnerClassifFairzlrm$clone(deep = FALSE)"},{"path":"https://mlr3fairness.mlr-org.com/reference/mlr_learners_classif.fairzlrm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Classification Fair Logistic Regression With Covariance Constraints Learner — mlr_learners_classif.fairzlrm","text":"deep Whether make deep clone.","code":""},{"path":"https://mlr3fairness.mlr-org.com/reference/mlr_learners_classif.fairzlrm.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Classification Fair Logistic Regression With Covariance Constraints Learner — mlr_learners_classif.fairzlrm","text":"","code":"# stop example failing with warning if package not installed learner = suppressWarnings(mlr3::lrn(\"classif.fairzlrm\")) print(learner) #> <LearnerClassifFairzlrm:classif.fairzlrm> #> * Model: - #> * Parameters: unfairness=0.05, intersect=FALSE #> * Packages: mlr3, fairml #> * Predict Types:  [response], prob #> * Feature Types: integer, numeric, factor, ordered #> * Properties: twoclass  # available parameters: learner$param_set$ids() #> [1] \"unfairness\" \"intersect\""},{"path":"https://mlr3fairness.mlr-org.com/reference/mlr_learners_fairness.html","id":null,"dir":"Reference","previous_headings":"","what":"Fair Learners in mlr3 — mlr_learners_fairness","title":"Fair Learners in mlr3 — mlr_learners_fairness","text":"Fair Learners mlr3","code":""},{"path":"https://mlr3fairness.mlr-org.com/reference/mlr_learners_fairness.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fair Learners in mlr3 — mlr_learners_fairness","text":"","code":"mlr_learners_fairness"},{"path":"https://mlr3fairness.mlr-org.com/reference/mlr_learners_fairness.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Fair Learners in mlr3 — mlr_learners_fairness","text":"object class data.table (inherits data.frame) 5 rows 3 columns.","code":""},{"path":"https://mlr3fairness.mlr-org.com/reference/mlr_learners_fairness.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fair Learners in mlr3 — mlr_learners_fairness","text":"data.table containing overview available fair learners.","code":""},{"path":"https://mlr3fairness.mlr-org.com/reference/mlr_learners_fairness.html","id":"predefined-measures","dir":"Reference","previous_headings":"","what":"Predefined measures","title":"Fair Learners in mlr3 — mlr_learners_fairness","text":"mlr3fairness comes set predefined fairn learners listed :","code":""},{"path":"https://mlr3fairness.mlr-org.com/reference/mlr_learners_fairness.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Fair Learners in mlr3 — mlr_learners_fairness","text":"","code":"# Available learners: mlr_learners_fairness #>                  key package             reference #> 1:     regr.fairfrrm  fairml  Scutari et al., 2021 #> 2: classif.fairfgrrm  fairml  Scutari et al., 2021 #> 3:      regr.fairzlm  fairml    Zafar et al., 2019 #> 4:  classif.fairzlrm  fairml    Zafar et al., 2019 #> 5:     regr.fairnclm  fairml Komiyama et al., 2018"},{"path":"https://mlr3fairness.mlr-org.com/reference/mlr_learners_regr.fairfrrm.html","id":null,"dir":"Reference","previous_headings":"","what":"Regression Fair Ridge Regression Learner — mlr_learners_regr.fairfrrm","title":"Regression Fair Ridge Regression Learner — mlr_learners_regr.fairfrrm","text":"one pta columns provided, hyperparameter intersectional controls whether intersections protected groups formed (e.g. combinations gender race). Initialized TRUE. FALSE, group specified first element pta used. Calls fairml::frrm package fairml.","code":""},{"path":"https://mlr3fairness.mlr-org.com/reference/mlr_learners_regr.fairfrrm.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Regression Fair Ridge Regression Learner — mlr_learners_regr.fairfrrm","text":"Fair ridge regression learner implemented via package fairml. 'unfairness' parameter initialized 0.05.","code":""},{"path":"https://mlr3fairness.mlr-org.com/reference/mlr_learners_regr.fairfrrm.html","id":"dictionary","dir":"Reference","previous_headings":"","what":"Dictionary","title":"Regression Fair Ridge Regression Learner — mlr_learners_regr.fairfrrm","text":"Learner can instantiated via dictionary mlr_learners associated sugar function lrn():","code":"mlr_learners$get(\"regr.fairfrrm\") lrn(\"regr.fairfrrm\")"},{"path":"https://mlr3fairness.mlr-org.com/reference/mlr_learners_regr.fairfrrm.html","id":"meta-information","dir":"Reference","previous_headings":"","what":"Meta Information","title":"Regression Fair Ridge Regression Learner — mlr_learners_regr.fairfrrm","text":"Task type: “regr” Predict Types: “response” Feature Types: “integer”, “numeric”, “factor”, “ordered” Required Packages: mlr3, fairml","code":""},{"path":[]},{"path":"https://mlr3fairness.mlr-org.com/reference/mlr_learners_regr.fairfrrm.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Regression Fair Ridge Regression Learner — mlr_learners_regr.fairfrrm","text":"Scutari M, Panero F, Proissl M (2021). “Achieving Fairness Simple Ridge Penalty.” arXiv preprint arXiv:2105.13817.","code":""},{"path":[]},{"path":"https://mlr3fairness.mlr-org.com/reference/mlr_learners_regr.fairfrrm.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Regression Fair Ridge Regression Learner — mlr_learners_regr.fairfrrm","text":"pfistfl","code":""},{"path":"https://mlr3fairness.mlr-org.com/reference/mlr_learners_regr.fairfrrm.html","id":"super-classes","dir":"Reference","previous_headings":"","what":"Super classes","title":"Regression Fair Ridge Regression Learner — mlr_learners_regr.fairfrrm","text":"mlr3::Learner -> mlr3::LearnerRegr -> LearnerRegrFairfrrm","code":""},{"path":"https://mlr3fairness.mlr-org.com/reference/mlr_learners_regr.fairfrrm.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"Regression Fair Ridge Regression Learner — mlr_learners_regr.fairfrrm","text":"mlr3::Learner$base_learner() mlr3::Learner$format() mlr3::Learner$help() mlr3::Learner$predict() mlr3::Learner$predict_newdata() mlr3::Learner$print() mlr3::Learner$reset() mlr3::Learner$train()","code":""},{"path":"https://mlr3fairness.mlr-org.com/reference/mlr_learners_regr.fairfrrm.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"Regression Fair Ridge Regression Learner — mlr_learners_regr.fairfrrm","text":"LearnerRegrFairfrrm$new() LearnerRegrFairfrrm$clone()","code":""},{"path":"https://mlr3fairness.mlr-org.com/reference/mlr_learners_regr.fairfrrm.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"Regression Fair Ridge Regression Learner — mlr_learners_regr.fairfrrm","text":"Creates new instance R6 class.","code":""},{"path":"https://mlr3fairness.mlr-org.com/reference/mlr_learners_regr.fairfrrm.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Regression Fair Ridge Regression Learner — mlr_learners_regr.fairfrrm","text":"","code":"LearnerRegrFairfrrm$new()"},{"path":"https://mlr3fairness.mlr-org.com/reference/mlr_learners_regr.fairfrrm.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"Regression Fair Ridge Regression Learner — mlr_learners_regr.fairfrrm","text":"objects class cloneable method.","code":""},{"path":"https://mlr3fairness.mlr-org.com/reference/mlr_learners_regr.fairfrrm.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"Regression Fair Ridge Regression Learner — mlr_learners_regr.fairfrrm","text":"","code":"LearnerRegrFairfrrm$clone(deep = FALSE)"},{"path":"https://mlr3fairness.mlr-org.com/reference/mlr_learners_regr.fairfrrm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Regression Fair Ridge Regression Learner — mlr_learners_regr.fairfrrm","text":"deep Whether make deep clone.","code":""},{"path":"https://mlr3fairness.mlr-org.com/reference/mlr_learners_regr.fairfrrm.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Regression Fair Ridge Regression Learner — mlr_learners_regr.fairfrrm","text":"","code":"# stop example failing with warning if package not installed learner = suppressWarnings(mlr3::lrn(\"regr.fairfrrm\")) print(learner) #> <LearnerRegrFairfrrm:regr.fairfrrm> #> * Model: - #> * Parameters: unfairness=0.05 #> * Packages: mlr3, fairml #> * Predict Types:  [response] #> * Feature Types: integer, numeric, factor, ordered #> * Properties: -  # available parameters: learner$param_set$ids() #> [1] \"lambda\"         \"definition\"     \"save.auxiliary\" \"unfairness\""},{"path":"https://mlr3fairness.mlr-org.com/reference/mlr_learners_regr.fairnclm.html","id":null,"dir":"Reference","previous_headings":"","what":"Regression Non-convex Fair Regression Learner — mlr_learners_regr.fairnclm","title":"Regression Non-convex Fair Regression Learner — mlr_learners_regr.fairnclm","text":"Calls fairml::nclm package fairml.","code":""},{"path":"https://mlr3fairness.mlr-org.com/reference/mlr_learners_regr.fairnclm.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Regression Non-convex Fair Regression Learner — mlr_learners_regr.fairnclm","text":"Fair regression model based nonconvex optimization Komiyama et al. (2018). Implemented via package fairml. 'unfairness' parameter set 0.05 default.","code":""},{"path":"https://mlr3fairness.mlr-org.com/reference/mlr_learners_regr.fairnclm.html","id":"dictionary","dir":"Reference","previous_headings":"","what":"Dictionary","title":"Regression Non-convex Fair Regression Learner — mlr_learners_regr.fairnclm","text":"Learner can instantiated via dictionary mlr_learners associated sugar function lrn():","code":"mlr_learners$get(\"regr.fairnclm\") lrn(\"regr.fairnclm\")"},{"path":"https://mlr3fairness.mlr-org.com/reference/mlr_learners_regr.fairnclm.html","id":"meta-information","dir":"Reference","previous_headings":"","what":"Meta Information","title":"Regression Non-convex Fair Regression Learner — mlr_learners_regr.fairnclm","text":"Task type: “regr” Predict Types: “response” Feature Types: “integer”, “numeric”, “factor”, “ordered” Required Packages: mlr3, fairml","code":""},{"path":[]},{"path":"https://mlr3fairness.mlr-org.com/reference/mlr_learners_regr.fairnclm.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Regression Non-convex Fair Regression Learner — mlr_learners_regr.fairnclm","text":"J K, T, J H, H S (2018). “Nonconvex Optimization Regression Fairness Constraints.” Proceedings 35th International Conference Machine Learning (ICML), PMLR 80, 2737-2746.","code":""},{"path":[]},{"path":"https://mlr3fairness.mlr-org.com/reference/mlr_learners_regr.fairnclm.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Regression Non-convex Fair Regression Learner — mlr_learners_regr.fairnclm","text":"pfistfl","code":""},{"path":"https://mlr3fairness.mlr-org.com/reference/mlr_learners_regr.fairnclm.html","id":"super-classes","dir":"Reference","previous_headings":"","what":"Super classes","title":"Regression Non-convex Fair Regression Learner — mlr_learners_regr.fairnclm","text":"mlr3::Learner -> mlr3::LearnerRegr -> LearnerRegrFairnclm","code":""},{"path":"https://mlr3fairness.mlr-org.com/reference/mlr_learners_regr.fairnclm.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"Regression Non-convex Fair Regression Learner — mlr_learners_regr.fairnclm","text":"mlr3::Learner$base_learner() mlr3::Learner$format() mlr3::Learner$help() mlr3::Learner$predict() mlr3::Learner$predict_newdata() mlr3::Learner$print() mlr3::Learner$reset() mlr3::Learner$train()","code":""},{"path":"https://mlr3fairness.mlr-org.com/reference/mlr_learners_regr.fairnclm.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"Regression Non-convex Fair Regression Learner — mlr_learners_regr.fairnclm","text":"LearnerRegrFairnclm$new() LearnerRegrFairnclm$clone()","code":""},{"path":"https://mlr3fairness.mlr-org.com/reference/mlr_learners_regr.fairnclm.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"Regression Non-convex Fair Regression Learner — mlr_learners_regr.fairnclm","text":"Creates new instance R6 class.","code":""},{"path":"https://mlr3fairness.mlr-org.com/reference/mlr_learners_regr.fairnclm.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Regression Non-convex Fair Regression Learner — mlr_learners_regr.fairnclm","text":"","code":"LearnerRegrFairnclm$new()"},{"path":"https://mlr3fairness.mlr-org.com/reference/mlr_learners_regr.fairnclm.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"Regression Non-convex Fair Regression Learner — mlr_learners_regr.fairnclm","text":"objects class cloneable method.","code":""},{"path":"https://mlr3fairness.mlr-org.com/reference/mlr_learners_regr.fairnclm.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"Regression Non-convex Fair Regression Learner — mlr_learners_regr.fairnclm","text":"","code":"LearnerRegrFairnclm$clone(deep = FALSE)"},{"path":"https://mlr3fairness.mlr-org.com/reference/mlr_learners_regr.fairnclm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Regression Non-convex Fair Regression Learner — mlr_learners_regr.fairnclm","text":"deep Whether make deep clone.","code":""},{"path":"https://mlr3fairness.mlr-org.com/reference/mlr_learners_regr.fairnclm.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Regression Non-convex Fair Regression Learner — mlr_learners_regr.fairnclm","text":"","code":"# stop example failing with warning if package not installed learner = suppressWarnings(mlr3::lrn(\"regr.fairnclm\")) print(learner) #> <LearnerRegrFairnclm:regr.fairnclm> #> * Model: - #> * Parameters: unfairness=0.05 #> * Packages: mlr3, fairml #> * Predict Types:  [response] #> * Feature Types: integer, numeric, factor, ordered #> * Properties: -  # available parameters: learner$param_set$ids() #> [1] \"lambda\"         \"save.auxiliary\" \"covfun\"         \"unfairness\""},{"path":"https://mlr3fairness.mlr-org.com/reference/mlr_learners_regr.fairzlm.html","id":null,"dir":"Reference","previous_headings":"","what":"Regression Fair Regression With Covariance Constraints Learner — mlr_learners_regr.fairzlm","title":"Regression Fair Regression With Covariance Constraints Learner — mlr_learners_regr.fairzlm","text":"Calls fairml::zlm package fairml.","code":""},{"path":"https://mlr3fairness.mlr-org.com/reference/mlr_learners_regr.fairzlm.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Regression Fair Regression With Covariance Constraints Learner — mlr_learners_regr.fairzlm","text":"Fair regression model Zafar et al., 2019 implemented via package fairml. 'unfairness' parameter set 0.05 default. optimized fairness metric statistical parity.","code":""},{"path":"https://mlr3fairness.mlr-org.com/reference/mlr_learners_regr.fairzlm.html","id":"dictionary","dir":"Reference","previous_headings":"","what":"Dictionary","title":"Regression Fair Regression With Covariance Constraints Learner — mlr_learners_regr.fairzlm","text":"Learner can instantiated via dictionary mlr_learners associated sugar function lrn():","code":"mlr_learners$get(\"regr.fairzlm\") lrn(\"regr.fairzlm\")"},{"path":"https://mlr3fairness.mlr-org.com/reference/mlr_learners_regr.fairzlm.html","id":"meta-information","dir":"Reference","previous_headings":"","what":"Meta Information","title":"Regression Fair Regression With Covariance Constraints Learner — mlr_learners_regr.fairzlm","text":"Task type: “regr” Predict Types: “response” Feature Types: “integer”, “numeric”, “factor”, “ordered” Required Packages: mlr3, fairml","code":""},{"path":[]},{"path":"https://mlr3fairness.mlr-org.com/reference/mlr_learners_regr.fairzlm.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Regression Fair Regression With Covariance Constraints Learner — mlr_learners_regr.fairzlm","text":"BJ Z, V, M G, KP G (2019). “Fairness Constraints: Flexible Approach Fair Classification.” Journal Machine Learning Research, 30, 1-42.","code":""},{"path":[]},{"path":"https://mlr3fairness.mlr-org.com/reference/mlr_learners_regr.fairzlm.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Regression Fair Regression With Covariance Constraints Learner — mlr_learners_regr.fairzlm","text":"pfistfl","code":""},{"path":"https://mlr3fairness.mlr-org.com/reference/mlr_learners_regr.fairzlm.html","id":"super-classes","dir":"Reference","previous_headings":"","what":"Super classes","title":"Regression Fair Regression With Covariance Constraints Learner — mlr_learners_regr.fairzlm","text":"mlr3::Learner -> mlr3::LearnerRegr -> LearnerRegrFairzlm","code":""},{"path":"https://mlr3fairness.mlr-org.com/reference/mlr_learners_regr.fairzlm.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"Regression Fair Regression With Covariance Constraints Learner — mlr_learners_regr.fairzlm","text":"mlr3::Learner$base_learner() mlr3::Learner$format() mlr3::Learner$help() mlr3::Learner$predict() mlr3::Learner$predict_newdata() mlr3::Learner$print() mlr3::Learner$reset() mlr3::Learner$train()","code":""},{"path":"https://mlr3fairness.mlr-org.com/reference/mlr_learners_regr.fairzlm.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"Regression Fair Regression With Covariance Constraints Learner — mlr_learners_regr.fairzlm","text":"LearnerRegrFairzlm$new() LearnerRegrFairzlm$clone()","code":""},{"path":"https://mlr3fairness.mlr-org.com/reference/mlr_learners_regr.fairzlm.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"Regression Fair Regression With Covariance Constraints Learner — mlr_learners_regr.fairzlm","text":"Creates new instance R6 class.","code":""},{"path":"https://mlr3fairness.mlr-org.com/reference/mlr_learners_regr.fairzlm.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Regression Fair Regression With Covariance Constraints Learner — mlr_learners_regr.fairzlm","text":"","code":"LearnerRegrFairzlm$new()"},{"path":"https://mlr3fairness.mlr-org.com/reference/mlr_learners_regr.fairzlm.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"Regression Fair Regression With Covariance Constraints Learner — mlr_learners_regr.fairzlm","text":"objects class cloneable method.","code":""},{"path":"https://mlr3fairness.mlr-org.com/reference/mlr_learners_regr.fairzlm.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"Regression Fair Regression With Covariance Constraints Learner — mlr_learners_regr.fairzlm","text":"","code":"LearnerRegrFairzlm$clone(deep = FALSE)"},{"path":"https://mlr3fairness.mlr-org.com/reference/mlr_learners_regr.fairzlm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Regression Fair Regression With Covariance Constraints Learner — mlr_learners_regr.fairzlm","text":"deep Whether make deep clone.","code":""},{"path":"https://mlr3fairness.mlr-org.com/reference/mlr_learners_regr.fairzlm.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Regression Fair Regression With Covariance Constraints Learner — mlr_learners_regr.fairzlm","text":"","code":"# stop example failing with warning if package not installed learner = suppressWarnings(mlr3::lrn(\"regr.fairzlm\")) print(learner) #> <LearnerRegrFairzlm:regr.fairzlm> #> * Model: - #> * Parameters: unfairness=0.05, intersect=FALSE #> * Packages: mlr3, fairml #> * Predict Types:  [response] #> * Feature Types: integer, numeric, factor, ordered #> * Properties: -  # available parameters: learner$param_set$ids() #> [1] \"unfairness\" \"intersect\""},{"path":"https://mlr3fairness.mlr-org.com/reference/mlr_measures_fairness.html","id":null,"dir":"Reference","previous_headings":"","what":"Fairness Measures in mlr3 — mlr_measures_fairness","title":"Fairness Measures in mlr3 — mlr_measures_fairness","text":"Fairness Measures mlr3","code":""},{"path":"https://mlr3fairness.mlr-org.com/reference/mlr_measures_fairness.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fairness Measures in mlr3 — mlr_measures_fairness","text":"","code":"mlr_measures_fairness"},{"path":"https://mlr3fairness.mlr-org.com/reference/mlr_measures_fairness.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Fairness Measures in mlr3 — mlr_measures_fairness","text":"object class data.table (inherits data.frame) 18 rows 2 columns.","code":""},{"path":"https://mlr3fairness.mlr-org.com/reference/mlr_measures_fairness.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fairness Measures in mlr3 — mlr_measures_fairness","text":"data.table containing overview available fairness metrics.","code":""},{"path":"https://mlr3fairness.mlr-org.com/reference/mlr_measures_fairness.html","id":"predefined-measures","dir":"Reference","previous_headings":"","what":"Predefined measures","title":"Fairness Measures in mlr3 — mlr_measures_fairness","text":"mlr3fairness comes set predefined fairness measures listed . full flexibility, MeasureFairness can used construct classical group fairness measures based difference performance metrics across groups combining performance measure operation measuring differences. Furthermore MeasureSubgroup can used measure performance given subgroup, alternatively groupwise_metrics(measure, task) instantiate measure subgroup Task.","code":""},{"path":"https://mlr3fairness.mlr-org.com/reference/mlr_measures_fairness.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Fairness Measures in mlr3 — mlr_measures_fairness","text":"","code":"# Predefined measures: mlr_measures_fairness$key #>  [1] \"fairness.acc\"         \"fairness.mse\"         \"fairness.fnr\"         #>  [4] \"fairness.fpr\"         \"fairness.tnr\"         \"fairness.tpr\"         #>  [7] \"fairness.npv\"         \"fairness.ppv\"         \"fairness.fomr\"        #> [10] \"fairness.fp\"          \"fairness.tp\"          \"fairness.tn\"          #> [13] \"fairness.fn\"          \"fairness.cv\"          \"fairness.eod\"         #> [16] \"fairness.pp\"          \"fairness.acc_eod=.05\" \"fairness.acc_ppv=.05\""},{"path":"https://mlr3fairness.mlr-org.com/reference/mlr_measures_positive_probability.html","id":null,"dir":"Reference","previous_headings":"","what":"Positive Probability Measure — mlr_measures_positive_probability","title":"Positive Probability Measure — mlr_measures_positive_probability","text":"Return probabiliy positive prediction, often known 'Calders-Wevers' gap. defined count positive predictions divided number observations.","code":""},{"path":"https://mlr3fairness.mlr-org.com/reference/mlr_measures_positive_probability.html","id":"super-class","dir":"Reference","previous_headings":"","what":"Super class","title":"Positive Probability Measure — mlr_measures_positive_probability","text":"mlr3::Measure -> MeasurePositiveProbability","code":""},{"path":"https://mlr3fairness.mlr-org.com/reference/mlr_measures_positive_probability.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"Positive Probability Measure — mlr_measures_positive_probability","text":"mlr3::Measure$aggregate() mlr3::Measure$format() mlr3::Measure$help() mlr3::Measure$print() mlr3::Measure$score()","code":""},{"path":"https://mlr3fairness.mlr-org.com/reference/mlr_measures_positive_probability.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"Positive Probability Measure — mlr_measures_positive_probability","text":"MeasurePositiveProbability$new() MeasurePositiveProbability$clone()","code":""},{"path":"https://mlr3fairness.mlr-org.com/reference/mlr_measures_positive_probability.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"Positive Probability Measure — mlr_measures_positive_probability","text":"Initialize Measure Positive Probability Object","code":""},{"path":"https://mlr3fairness.mlr-org.com/reference/mlr_measures_positive_probability.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Positive Probability Measure — mlr_measures_positive_probability","text":"","code":"MeasurePositiveProbability$new()"},{"path":"https://mlr3fairness.mlr-org.com/reference/mlr_measures_positive_probability.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"Positive Probability Measure — mlr_measures_positive_probability","text":"objects class cloneable method.","code":""},{"path":"https://mlr3fairness.mlr-org.com/reference/mlr_measures_positive_probability.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"Positive Probability Measure — mlr_measures_positive_probability","text":"","code":"MeasurePositiveProbability$clone(deep = FALSE)"},{"path":"https://mlr3fairness.mlr-org.com/reference/mlr_measures_positive_probability.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Positive Probability Measure — mlr_measures_positive_probability","text":"deep Whether make deep clone.","code":""},{"path":"https://mlr3fairness.mlr-org.com/reference/mlr_measures_positive_probability.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Positive Probability Measure — mlr_measures_positive_probability","text":"","code":"# Create Positive Probability Measure t = tsk(\"adult_train\") learner = lrn(\"classif.rpart\", cp = .01) learner$train(t) measure = msr(\"classif.pp\") predictions = learner$predict(t) predictions$score(measure, task = t) #> classif.pp  #>  0.8342014"},{"path":"https://mlr3fairness.mlr-org.com/reference/mlr_pipeops_equalized_odds.html","id":null,"dir":"Reference","previous_headings":"","what":"Equalized Odds Debiasing — mlr_pipeops_equalized_odds","title":"Equalized Odds Debiasing — mlr_pipeops_equalized_odds","text":"Fairness post-processing method achieve equalized odds fairness. Works randomly flipping subset predictions pre-computed probabilities order satisfy equalized odds constraints. NOTE: Carefully assess correct privileged group.","code":""},{"path":"https://mlr3fairness.mlr-org.com/reference/mlr_pipeops_equalized_odds.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Equalized Odds Debiasing — mlr_pipeops_equalized_odds","text":"R6Class object inheriting PipeOpTaskPreproc/PipeOp.","code":""},{"path":"https://mlr3fairness.mlr-org.com/reference/mlr_pipeops_equalized_odds.html","id":"construction","dir":"Reference","previous_headings":"","what":"Construction","title":"Equalized Odds Debiasing — mlr_pipeops_equalized_odds","text":"id (character(1)). param_vals (list())","code":"PipeOpEOd*$new(id = \"eod\", param_vals = list())"},{"path":"https://mlr3fairness.mlr-org.com/reference/mlr_pipeops_equalized_odds.html","id":"input-and-output-channels","dir":"Reference","previous_headings":"","what":"Input and Output Channels","title":"Equalized Odds Debiasing — mlr_pipeops_equalized_odds","text":"Input output channels inherited PipeOpTaskPreproc. Instead Task, TaskClassif used input output training prediction. output training input Task. output prediction PredictionClassif partially flipped predictions.","code":""},{"path":"https://mlr3fairness.mlr-org.com/reference/mlr_pipeops_equalized_odds.html","id":"state","dir":"Reference","previous_headings":"","what":"State","title":"Equalized Odds Debiasing — mlr_pipeops_equalized_odds","text":"$state named list $state elements inherited PipeOpTaskPreproc.","code":""},{"path":"https://mlr3fairness.mlr-org.com/reference/mlr_pipeops_equalized_odds.html","id":"parameters","dir":"Reference","previous_headings":"","what":"Parameters","title":"Equalized Odds Debiasing — mlr_pipeops_equalized_odds","text":"alpha (numeric()): number 0 (debiasing) 1 (full debiasing). Controls debiasing strength multiplying flipping probabilities alpha. privileged (character()): privileged group.","code":""},{"path":"https://mlr3fairness.mlr-org.com/reference/mlr_pipeops_equalized_odds.html","id":"fields","dir":"Reference","previous_headings":"","what":"Fields","title":"Equalized Odds Debiasing — mlr_pipeops_equalized_odds","text":"fields inherited PipeOpTaskPreproc/PipeOp.","code":""},{"path":"https://mlr3fairness.mlr-org.com/reference/mlr_pipeops_equalized_odds.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"Equalized Odds Debiasing — mlr_pipeops_equalized_odds","text":"Methods inherited PipeOpTaskPreproc/PipeOp.","code":""},{"path":"https://mlr3fairness.mlr-org.com/reference/mlr_pipeops_equalized_odds.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Equalized Odds Debiasing — mlr_pipeops_equalized_odds","text":"Hardt M, Price E, Srebro N (2016). “Equality Opportunity Supervised Learning.” Advances Neural Information Processing Systems, volume 29, 3315--3323. https://papers.nips.cc/paper/2016/file/9d2682367c3935defcb1f9e247a97c0d-Paper.pdf. Pleiss, Geoff, Raghavan, Manish, Wu, Felix, Kleinberg, Jon, Weinberger, Q K (2017). “Fairness Calibration.” Guyon , Luxburg UV, Bengio S, Wallach H, Fergus R, Vishwanathan S, Garnett R (eds.), Advances Neural Information Processing Systems, volume 30. https://proceedings.neurips.cc/paper/2017/file/b8b9c74ac526fffbeb2d39ab038d1cd7-Paper.pdf.","code":""},{"path":[]},{"path":"https://mlr3fairness.mlr-org.com/reference/mlr_pipeops_equalized_odds.html","id":"super-class","dir":"Reference","previous_headings":"","what":"Super class","title":"Equalized Odds Debiasing — mlr_pipeops_equalized_odds","text":"mlr3pipelines::PipeOp -> PipeOpEOd","code":""},{"path":"https://mlr3fairness.mlr-org.com/reference/mlr_pipeops_equalized_odds.html","id":"methods-1","dir":"Reference","previous_headings":"","what":"Methods","title":"Equalized Odds Debiasing — mlr_pipeops_equalized_odds","text":"mlr3pipelines::PipeOp$help() mlr3pipelines::PipeOp$predict() mlr3pipelines::PipeOp$print() mlr3pipelines::PipeOp$train()","code":""},{"path":"https://mlr3fairness.mlr-org.com/reference/mlr_pipeops_equalized_odds.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"Equalized Odds Debiasing — mlr_pipeops_equalized_odds","text":"PipeOpEOd$new() PipeOpEOd$clone()","code":""},{"path":"https://mlr3fairness.mlr-org.com/reference/mlr_pipeops_equalized_odds.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"Equalized Odds Debiasing — mlr_pipeops_equalized_odds","text":"Creates new instance [R6][R6::R6Class][PipeOp] R6 class.","code":""},{"path":"https://mlr3fairness.mlr-org.com/reference/mlr_pipeops_equalized_odds.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Equalized Odds Debiasing — mlr_pipeops_equalized_odds","text":"","code":"PipeOpEOd$new(id = \"EOd\", param_vals = list())"},{"path":"https://mlr3fairness.mlr-org.com/reference/mlr_pipeops_equalized_odds.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Equalized Odds Debiasing — mlr_pipeops_equalized_odds","text":"id character  PipeOps identifier PipeOps library. param_vals list  parameter values set. See Parameters.","code":""},{"path":"https://mlr3fairness.mlr-org.com/reference/mlr_pipeops_equalized_odds.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"Equalized Odds Debiasing — mlr_pipeops_equalized_odds","text":"objects class cloneable method.","code":""},{"path":"https://mlr3fairness.mlr-org.com/reference/mlr_pipeops_equalized_odds.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"Equalized Odds Debiasing — mlr_pipeops_equalized_odds","text":"","code":"PipeOpEOd$clone(deep = FALSE)"},{"path":"https://mlr3fairness.mlr-org.com/reference/mlr_pipeops_equalized_odds.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"Equalized Odds Debiasing — mlr_pipeops_equalized_odds","text":"deep Whether make deep clone.","code":""},{"path":"https://mlr3fairness.mlr-org.com/reference/mlr_pipeops_equalized_odds.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Equalized Odds Debiasing — mlr_pipeops_equalized_odds","text":"","code":"library(mlr3pipelines)  eod = po(\"EOd\") learner_po = po(\"learner_cv\",   learner = lrn(\"classif.rpart\"),   resampling.method = \"insample\" )  task = tsk(\"compas\") graph = learner_po %>>% eod glrn = GraphLearner$new(graph) glrn$train(task)  # On a Task glrn$predict(task) #> <PredictionClassif> for 6172 observations: #>     row_ids truth response #>           1     0        0 #>           2     1        1 #>           3     1        1 #> ---                        #>        6170     0        0 #>        6171     0        0 #>        6172     1        1  # On newdata glrn$predict_newdata(task$data(cols = task$feature_names)) #> <PredictionClassif> for 6172 observations: #>     row_ids truth response #>           1  <NA>        0 #>           2  <NA>        1 #>           3  <NA>        1 #> ---                        #>        6170  <NA>        0 #>        6171  <NA>        0 #>        6172  <NA>        1"},{"path":"https://mlr3fairness.mlr-org.com/reference/mlr_pipeops_explicit_pta.html","id":null,"dir":"Reference","previous_headings":"","what":"PipeOpExplicitPta — mlr_pipeops_explicit_pta","title":"PipeOpExplicitPta — mlr_pipeops_explicit_pta","text":"Turns column column role 'pta' explicit separate column prefixed \"..internal_pta\". keeps getting changed adapted subsequent pipelines operate feature pta.","code":""},{"path":"https://mlr3fairness.mlr-org.com/reference/mlr_pipeops_explicit_pta.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"PipeOpExplicitPta — mlr_pipeops_explicit_pta","text":"R6Class object inheriting PipeOpTaskPreproc/PipeOp.","code":""},{"path":"https://mlr3fairness.mlr-org.com/reference/mlr_pipeops_explicit_pta.html","id":"construction","dir":"Reference","previous_headings":"","what":"Construction","title":"PipeOpExplicitPta — mlr_pipeops_explicit_pta","text":"id (character(1)). param_vals (list())","code":"PipeOpExplicitPta$new(id = \"reweighing\", param_vals = list())"},{"path":"https://mlr3fairness.mlr-org.com/reference/mlr_pipeops_explicit_pta.html","id":"input-and-output-channels","dir":"Reference","previous_headings":"","what":"Input and Output Channels","title":"PipeOpExplicitPta — mlr_pipeops_explicit_pta","text":"Input output channels inherited PipeOpTaskPreproc. Instead Task, TaskClassif used input output training prediction. output training input Task added weights column according target class. output prediction unchanged input.","code":""},{"path":"https://mlr3fairness.mlr-org.com/reference/mlr_pipeops_explicit_pta.html","id":"state","dir":"Reference","previous_headings":"","what":"State","title":"PipeOpExplicitPta — mlr_pipeops_explicit_pta","text":"$state named list $state elements inherited PipeOpTaskPreproc.","code":""},{"path":"https://mlr3fairness.mlr-org.com/reference/mlr_pipeops_explicit_pta.html","id":"parameters","dir":"Reference","previous_headings":"","what":"Parameters","title":"PipeOpExplicitPta — mlr_pipeops_explicit_pta","text":"PipeOp hyperparameters.","code":""},{"path":"https://mlr3fairness.mlr-org.com/reference/mlr_pipeops_explicit_pta.html","id":"internals","dir":"Reference","previous_headings":"","what":"Internals","title":"PipeOpExplicitPta — mlr_pipeops_explicit_pta","text":"Copies existing pta column new column.","code":""},{"path":"https://mlr3fairness.mlr-org.com/reference/mlr_pipeops_explicit_pta.html","id":"fields","dir":"Reference","previous_headings":"","what":"Fields","title":"PipeOpExplicitPta — mlr_pipeops_explicit_pta","text":"fields inherited PipeOpTaskPreproc/PipeOp.","code":""},{"path":"https://mlr3fairness.mlr-org.com/reference/mlr_pipeops_explicit_pta.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"PipeOpExplicitPta — mlr_pipeops_explicit_pta","text":"Methods inherited PipeOpTaskPreproc/PipeOp.","code":""},{"path":[]},{"path":"https://mlr3fairness.mlr-org.com/reference/mlr_pipeops_explicit_pta.html","id":"super-classes","dir":"Reference","previous_headings":"","what":"Super classes","title":"PipeOpExplicitPta — mlr_pipeops_explicit_pta","text":"mlr3pipelines::PipeOp -> mlr3pipelines::PipeOpTaskPreproc -> PipeOpExplicitPta","code":""},{"path":"https://mlr3fairness.mlr-org.com/reference/mlr_pipeops_explicit_pta.html","id":"methods-1","dir":"Reference","previous_headings":"","what":"Methods","title":"PipeOpExplicitPta — mlr_pipeops_explicit_pta","text":"mlr3pipelines::PipeOp$help() mlr3pipelines::PipeOp$predict() mlr3pipelines::PipeOp$print() mlr3pipelines::PipeOp$train()","code":""},{"path":"https://mlr3fairness.mlr-org.com/reference/mlr_pipeops_explicit_pta.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"PipeOpExplicitPta — mlr_pipeops_explicit_pta","text":"PipeOpExplicitPta$new() PipeOpExplicitPta$clone()","code":""},{"path":"https://mlr3fairness.mlr-org.com/reference/mlr_pipeops_explicit_pta.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"PipeOpExplicitPta — mlr_pipeops_explicit_pta","text":"Creates new instance [R6][R6::R6Class][PipeOp] R6 class.","code":""},{"path":"https://mlr3fairness.mlr-org.com/reference/mlr_pipeops_explicit_pta.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"PipeOpExplicitPta — mlr_pipeops_explicit_pta","text":"","code":"PipeOpExplicitPta$new(id = \"explicit_pta\", param_vals = list())"},{"path":"https://mlr3fairness.mlr-org.com/reference/mlr_pipeops_explicit_pta.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"PipeOpExplicitPta — mlr_pipeops_explicit_pta","text":"id character  PipeOps identifier PipeOps library. param_vals list  parameter values set. See Parameters.","code":""},{"path":"https://mlr3fairness.mlr-org.com/reference/mlr_pipeops_explicit_pta.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"PipeOpExplicitPta — mlr_pipeops_explicit_pta","text":"objects class cloneable method.","code":""},{"path":"https://mlr3fairness.mlr-org.com/reference/mlr_pipeops_explicit_pta.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"PipeOpExplicitPta — mlr_pipeops_explicit_pta","text":"","code":"PipeOpExplicitPta$clone(deep = FALSE)"},{"path":"https://mlr3fairness.mlr-org.com/reference/mlr_pipeops_explicit_pta.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"PipeOpExplicitPta — mlr_pipeops_explicit_pta","text":"deep Whether make deep clone.","code":""},{"path":"https://mlr3fairness.mlr-org.com/reference/mlr_pipeops_explicit_pta.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"PipeOpExplicitPta — mlr_pipeops_explicit_pta","text":"","code":"library(mlr3pipelines) epta = po(\"explicit_pta\") new = epta$train(list(tsk(\"adult_train\")))"},{"path":"https://mlr3fairness.mlr-org.com/reference/mlr_pipeops_reweighing.html","id":null,"dir":"Reference","previous_headings":"","what":"Reweighing to balance disparate impact metric — mlr_pipeops_reweighing","title":"Reweighing to balance disparate impact metric — mlr_pipeops_reweighing","text":"Adjusts class balance protected group balance order achieve fair(er) outcomes.","code":""},{"path":"https://mlr3fairness.mlr-org.com/reference/mlr_pipeops_reweighing.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Reweighing to balance disparate impact metric — mlr_pipeops_reweighing","text":"R6Class object inheriting PipeOpTaskPreproc/PipeOp.","code":""},{"path":"https://mlr3fairness.mlr-org.com/reference/mlr_pipeops_reweighing.html","id":"pipeopreweighingweights","dir":"Reference","previous_headings":"","what":"PipeOpReweighingWeights","title":"Reweighing to balance disparate impact metric — mlr_pipeops_reweighing","text":"Adds class weight column Task different Learners may using. case initial weights present, multiplied new weights. Caution: fairness tasks supported. means tasks need protected field. tsk$col_roles$pta.","code":""},{"path":"https://mlr3fairness.mlr-org.com/reference/mlr_pipeops_reweighing.html","id":"pipeopreweighingoversampling","dir":"Reference","previous_headings":"","what":"PipeOpReweighingOversampling","title":"Reweighing to balance disparate impact metric — mlr_pipeops_reweighing","text":"Oversamples Task balanced ratios subgroups protected groups. Can used learner support weights. Caution: fairness tasks supported. means tasks need protected field. tsk$col_roles$pta.","code":""},{"path":"https://mlr3fairness.mlr-org.com/reference/mlr_pipeops_reweighing.html","id":"construction","dir":"Reference","previous_headings":"","what":"Construction","title":"Reweighing to balance disparate impact metric — mlr_pipeops_reweighing","text":"id (character(1)). param_vals (list())","code":"PipeOpReweighing*$new(id = \"reweighing\", param_vals = list())"},{"path":"https://mlr3fairness.mlr-org.com/reference/mlr_pipeops_reweighing.html","id":"input-and-output-channels","dir":"Reference","previous_headings":"","what":"Input and Output Channels","title":"Reweighing to balance disparate impact metric — mlr_pipeops_reweighing","text":"Input output channels inherited PipeOpTaskPreproc. Instead Task, TaskClassif used input output training prediction. output training input Task added weights column according target class. output prediction unchanged input.","code":""},{"path":"https://mlr3fairness.mlr-org.com/reference/mlr_pipeops_reweighing.html","id":"state","dir":"Reference","previous_headings":"","what":"State","title":"Reweighing to balance disparate impact metric — mlr_pipeops_reweighing","text":"$state named list $state elements inherited PipeOpTaskPreproc.","code":""},{"path":"https://mlr3fairness.mlr-org.com/reference/mlr_pipeops_reweighing.html","id":"parameters","dir":"Reference","previous_headings":"","what":"Parameters","title":"Reweighing to balance disparate impact metric — mlr_pipeops_reweighing","text":"alpha (numeric()): number 0 (debiasing) 1 (full debiasing).","code":""},{"path":"https://mlr3fairness.mlr-org.com/reference/mlr_pipeops_reweighing.html","id":"internals","dir":"Reference","previous_headings":"","what":"Internals","title":"Reweighing to balance disparate impact metric — mlr_pipeops_reweighing","text":"Introduces, overwrites, \"weights\" column Task. However, Learner method needs respect weights effect. newly introduced column named reweighing.WEIGHTS; naming conflict column already exists weight column .","code":""},{"path":"https://mlr3fairness.mlr-org.com/reference/mlr_pipeops_reweighing.html","id":"fields","dir":"Reference","previous_headings":"","what":"Fields","title":"Reweighing to balance disparate impact metric — mlr_pipeops_reweighing","text":"fields inherited PipeOpTaskPreproc/PipeOp.","code":""},{"path":"https://mlr3fairness.mlr-org.com/reference/mlr_pipeops_reweighing.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"Reweighing to balance disparate impact metric — mlr_pipeops_reweighing","text":"Methods inherited PipeOpTaskPreproc/PipeOp.","code":""},{"path":"https://mlr3fairness.mlr-org.com/reference/mlr_pipeops_reweighing.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Reweighing to balance disparate impact metric — mlr_pipeops_reweighing","text":"Kamiran, Faisal, Calders, Toon (2012). “Data preprocessing techniques classification without discrimination.” Knowledge Information Systems, 33(1), 1--33.","code":""},{"path":[]},{"path":"https://mlr3fairness.mlr-org.com/reference/mlr_pipeops_reweighing.html","id":"super-classes","dir":"Reference","previous_headings":"","what":"Super classes","title":"Reweighing to balance disparate impact metric — mlr_pipeops_reweighing","text":"mlr3pipelines::PipeOp -> mlr3pipelines::PipeOpTaskPreproc -> PipeOpReweighingWeights","code":""},{"path":"https://mlr3fairness.mlr-org.com/reference/mlr_pipeops_reweighing.html","id":"methods-1","dir":"Reference","previous_headings":"","what":"Methods","title":"Reweighing to balance disparate impact metric — mlr_pipeops_reweighing","text":"mlr3pipelines::PipeOp$help() mlr3pipelines::PipeOp$predict() mlr3pipelines::PipeOp$print() mlr3pipelines::PipeOp$train()","code":""},{"path":"https://mlr3fairness.mlr-org.com/reference/mlr_pipeops_reweighing.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"Reweighing to balance disparate impact metric — mlr_pipeops_reweighing","text":"PipeOpReweighingWeights$new() PipeOpReweighingWeights$clone()","code":""},{"path":"https://mlr3fairness.mlr-org.com/reference/mlr_pipeops_reweighing.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"Reweighing to balance disparate impact metric — mlr_pipeops_reweighing","text":"Creates new instance [R6][R6::R6Class][PipeOp] R6 class.","code":""},{"path":"https://mlr3fairness.mlr-org.com/reference/mlr_pipeops_reweighing.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Reweighing to balance disparate impact metric — mlr_pipeops_reweighing","text":"","code":"PipeOpReweighingWeights$new(id = \"reweighing_wts\", param_vals = list())"},{"path":"https://mlr3fairness.mlr-org.com/reference/mlr_pipeops_reweighing.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Reweighing to balance disparate impact metric — mlr_pipeops_reweighing","text":"id character  PipeOps identifier PipeOps library. param_vals list  parameter values set. alpha: controls proportion initial weight (1 non existing) reweighing weight. Defaults 1. works: new_weight = (1 - alpha) * 1 + alpha x reweighing_weight final_weight = old_weight * new_weight","code":""},{"path":"https://mlr3fairness.mlr-org.com/reference/mlr_pipeops_reweighing.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"Reweighing to balance disparate impact metric — mlr_pipeops_reweighing","text":"objects class cloneable method.","code":""},{"path":"https://mlr3fairness.mlr-org.com/reference/mlr_pipeops_reweighing.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"Reweighing to balance disparate impact metric — mlr_pipeops_reweighing","text":"","code":"PipeOpReweighingWeights$clone(deep = FALSE)"},{"path":"https://mlr3fairness.mlr-org.com/reference/mlr_pipeops_reweighing.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"Reweighing to balance disparate impact metric — mlr_pipeops_reweighing","text":"deep Whether make deep clone.","code":""},{"path":"https://mlr3fairness.mlr-org.com/reference/mlr_pipeops_reweighing.html","id":"super-classes-1","dir":"Reference","previous_headings":"","what":"Super classes","title":"Reweighing to balance disparate impact metric — mlr_pipeops_reweighing","text":"mlr3pipelines::PipeOp -> mlr3pipelines::PipeOpTaskPreproc -> PipeOpReweighingOversampling","code":""},{"path":"https://mlr3fairness.mlr-org.com/reference/mlr_pipeops_reweighing.html","id":"methods-2","dir":"Reference","previous_headings":"","what":"Methods","title":"Reweighing to balance disparate impact metric — mlr_pipeops_reweighing","text":"mlr3pipelines::PipeOp$help() mlr3pipelines::PipeOp$predict() mlr3pipelines::PipeOp$print() mlr3pipelines::PipeOp$train()","code":""},{"path":"https://mlr3fairness.mlr-org.com/reference/mlr_pipeops_reweighing.html","id":"public-methods-1","dir":"Reference","previous_headings":"","what":"Public methods","title":"Reweighing to balance disparate impact metric — mlr_pipeops_reweighing","text":"PipeOpReweighingOversampling$new() PipeOpReweighingOversampling$clone()","code":""},{"path":[]},{"path":"https://mlr3fairness.mlr-org.com/reference/mlr_pipeops_reweighing.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"Reweighing to balance disparate impact metric — mlr_pipeops_reweighing","text":"","code":"PipeOpReweighingOversampling$new(id = \"reweighing_os\", param_vals = list())"},{"path":"https://mlr3fairness.mlr-org.com/reference/mlr_pipeops_reweighing.html","id":"arguments-2","dir":"Reference","previous_headings":"","what":"Arguments","title":"Reweighing to balance disparate impact metric — mlr_pipeops_reweighing","text":"id `character'  PipeOp's id. param_vals `list'  list parameter values.","code":""},{"path":"https://mlr3fairness.mlr-org.com/reference/mlr_pipeops_reweighing.html","id":"method-clone--1","dir":"Reference","previous_headings":"","what":"Method clone()","title":"Reweighing to balance disparate impact metric — mlr_pipeops_reweighing","text":"objects class cloneable method.","code":""},{"path":"https://mlr3fairness.mlr-org.com/reference/mlr_pipeops_reweighing.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"Reweighing to balance disparate impact metric — mlr_pipeops_reweighing","text":"","code":"PipeOpReweighingOversampling$clone(deep = FALSE)"},{"path":"https://mlr3fairness.mlr-org.com/reference/mlr_pipeops_reweighing.html","id":"arguments-3","dir":"Reference","previous_headings":"","what":"Arguments","title":"Reweighing to balance disparate impact metric — mlr_pipeops_reweighing","text":"deep Whether make deep clone.","code":""},{"path":"https://mlr3fairness.mlr-org.com/reference/mlr_pipeops_reweighing.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Reweighing to balance disparate impact metric — mlr_pipeops_reweighing","text":"","code":"library(mlr3pipelines)  reweighing = po(\"reweighing_wts\") learner_po = po(\"learner\", learner = lrn(\"classif.rpart\"))  data = tsk(\"adult_train\") graph = reweighing %>>% learner_po glrn = GraphLearner$new(graph) glrn$train(data) tem = glrn$predict(data) tem$confusion #>         truth #> response <=50K  >50K #>    <=50K 21793  3640 #>    >50K   1275  4010"},{"path":"https://mlr3fairness.mlr-org.com/reference/report_datasheet.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a Datasheet for Documenting a Dataset — report_datasheet","title":"Create a Datasheet for Documenting a Dataset — report_datasheet","text":"Creates new rmarkdown template skeleton questionnaire dataset documentation. Uses awesome markdown template created Chris Garbin Github.","code":""},{"path":"https://mlr3fairness.mlr-org.com/reference/report_datasheet.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a Datasheet for Documenting a Dataset — report_datasheet","text":"","code":"report_datasheet(filename = \"datasheet.Rmd\", edit = FALSE, build = FALSE)"},{"path":"https://mlr3fairness.mlr-org.com/reference/report_datasheet.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a Datasheet for Documenting a Dataset — report_datasheet","text":"filename (character(1)) File path name new file created. edit (logical(1))TRUE edit template immediately. build (logical(1)) report built creation? Initialized FALSE.","code":""},{"path":"https://mlr3fairness.mlr-org.com/reference/report_datasheet.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a Datasheet for Documenting a Dataset — report_datasheet","text":"Invisibly returns path newly created file(s).","code":""},{"path":"https://mlr3fairness.mlr-org.com/reference/report_datasheet.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Create a Datasheet for Documenting a Dataset — report_datasheet","text":"Gebru, Timnit, Morgenstern, Jamie, Vecchione, Briana, Vaughan, Wortman J, Wallach, Hanna, III D, Hal, Crawford, Kate (2018). “Datasheets datasets.” arXiv preprint arXiv:1803.09010.","code":""},{"path":[]},{"path":"https://mlr3fairness.mlr-org.com/reference/report_datasheet.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a Datasheet for Documenting a Dataset — report_datasheet","text":"","code":"report_file = tempfile()   report_datasheet(report_file)"},{"path":"https://mlr3fairness.mlr-org.com/reference/report_fairness.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a Fairness Report — report_fairness","title":"Create a Fairness Report — report_fairness","text":"Creates new rmarkdown template skeleton  reported metrics visualizations. Uses awesome markdown template created Chris Garbin Github.","code":""},{"path":"https://mlr3fairness.mlr-org.com/reference/report_fairness.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a Fairness Report — report_fairness","text":"","code":"report_fairness(   filename = \"fairness_report.Rmd\",   objects,   edit = FALSE,   check_objects = FALSE,   build = FALSE )"},{"path":"https://mlr3fairness.mlr-org.com/reference/report_fairness.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a Fairness Report — report_fairness","text":"filename (character(1)) File path name new file created. objects (list()) named list objects required fairness report. Objects saved <name>.rds new folder created report. task :: Task report created . resample_result ::  mlr3::ResampleResult result analyzed. ... :: objects passed report. edit (logical(1))TRUE edit template immediately. check_objects (logical(1)) items objects checked? FALSE, checks object performed. build (logical(1)) report built creation? Initialized FALSE.","code":""},{"path":"https://mlr3fairness.mlr-org.com/reference/report_fairness.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a Fairness Report — report_fairness","text":"Invisibly returns path newly created file(s).","code":""},{"path":[]},{"path":"https://mlr3fairness.mlr-org.com/reference/report_fairness.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a Fairness Report — report_fairness","text":"","code":"report_file = tempfile()   task = tsk(\"compas\")   learner = lrn(\"classif.rpart\", predict_type = \"prob\")   rr = resample(task, learner, rsmp(\"cv\", folds = 3L))   report_fairness(report_file, list(task = task, resample_result = rr))"},{"path":"https://mlr3fairness.mlr-org.com/reference/report_modelcard.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a Modelcard — report_modelcard","title":"Create a Modelcard — report_modelcard","text":"Creates new rmarkdown template skeleton questionnaire model card. Uses awesome markdown template created Chris Garbin Github.","code":""},{"path":"https://mlr3fairness.mlr-org.com/reference/report_modelcard.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a Modelcard — report_modelcard","text":"","code":"report_modelcard(filename = \"modelcard.Rmd\", edit = FALSE, build = FALSE)"},{"path":"https://mlr3fairness.mlr-org.com/reference/report_modelcard.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a Modelcard — report_modelcard","text":"filename (character(1)) File path name new file created. edit (logical(1))TRUE edit template immediately. build (logical(1)) report built creation? Initialized FALSE.","code":""},{"path":"https://mlr3fairness.mlr-org.com/reference/report_modelcard.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a Modelcard — report_modelcard","text":"Invisibly returns path newly created file(s).","code":""},{"path":"https://mlr3fairness.mlr-org.com/reference/report_modelcard.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Create a Modelcard — report_modelcard","text":"Mitchell, Margaret, Wu, Simone, Zaldivar, Andrew, Barnes, Parker, Vasserman, Lucy, Hutchinson, Ben, Spitzer, Elena, Raji, Deborah , Gebru, Timnit (2019). “Model cards model reporting.” Proceedings conference fairness, accountability, transparency, 220--229.","code":""},{"path":[]},{"path":"https://mlr3fairness.mlr-org.com/reference/report_modelcard.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a Modelcard — report_modelcard","text":"","code":"report_file = tempfile()   report_modelcard(report_file)"},{"path":"https://mlr3fairness.mlr-org.com/reference/task_summary.html","id":null,"dir":"Reference","previous_headings":"","what":"Task summary for fairness report — task_summary","title":"Task summary for fairness report — task_summary","text":"Create general task documentation dataframe fairness report. information includes Audit Date Task Name Number observations Number features Target Name Feature Names Protected Attribute","code":""},{"path":"https://mlr3fairness.mlr-org.com/reference/task_summary.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Task summary for fairness report — task_summary","text":"","code":"task_summary(task)"},{"path":"https://mlr3fairness.mlr-org.com/reference/task_summary.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Task summary for fairness report — task_summary","text":"task Task","code":""},{"path":"https://mlr3fairness.mlr-org.com/reference/task_summary.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Task summary for fairness report — task_summary","text":"data.frame containing reported information","code":""},{"path":"https://mlr3fairness.mlr-org.com/reference/task_summary.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Task summary for fairness report — task_summary","text":"","code":"task_summary(tsk(\"adult_train\")) #>                                                                                                                                                               Value #> Audit Date:                                                                                                                                              2022-09-15 #> Task Name:                                                                                                                                              adult_train #> Number of observations:                                                                                                                                       30718 #> Number of features:                                                                                                                                              13 #> Target Name:                                                                                                                                                 target #> Feature Names:            age, capital_gain, capital_loss, education, education_num, hours_per_week, martial_status, occupation, race, relationship, sex, workclass #> The Protected Attribute:                                                                                                                                        sex"},{"path":"https://mlr3fairness.mlr-org.com/news/index.html","id":"mlr3fairness-031","dir":"Changelog","previous_headings":"","what":"mlr3fairness 0.3.1","title":"mlr3fairness 0.3.1","text":"CRAN release: 2022-08-16 Minor update improve stability unit tests vignette building CRAN.","code":""},{"path":"https://mlr3fairness.mlr-org.com/news/index.html","id":"mlr3fairness-030","dir":"Changelog","previous_headings":"","what":"mlr3fairness 0.3.0","title":"mlr3fairness 0.3.0","text":"CRAN release: 2022-05-12 CRAN release version Minor improvements groupwise_metrics, can now intersect multiple protected attributes. New metric, fairness.pp allows computing predictive parity. New metric, fairness.cv allows computing Calders-Wevers gap. Add PipeOpExplicitPta thtat copies pta column separate column. Minor bug fixes improved tests multiple learnes pipeops.","code":""},{"path":"https://mlr3fairness.mlr-org.com/news/index.html","id":"mlr3fairness-020","dir":"Changelog","previous_headings":"","what":"mlr3fairness 0.2.0","title":"mlr3fairness 0.2.0","text":"Added 3 types reports: report_modelcard, report_datasheet, report_fairness Added several new fairness metrics classification: classif.fairzlrm | classif.fairfgrrm regression: regr.fairnclm | regr.fairzlm | regr.fairfrrm. Added MeasureSubgroup groupwise_metrics allow inspecting dis-aggregated fairness metrics.","code":""},{"path":"https://mlr3fairness.mlr-org.com/news/index.html","id":"mlr3fairness-010","dir":"Changelog","previous_headings":"","what":"mlr3fairness 0.1.0","title":"mlr3fairness 0.1.0","text":"Added NEWS.md file track changes package.","code":""}]
